CGW C$PRAGMA C (ICPI19)
C MEMBER EX19
C  (from old member FCEX19)
C
CVK  NEW SIMULATED SNOW DEPTH TIME SERIES ADDED
cav  NEW OBSERVED SNOW DEPTH TIME SERIES ADDED
CGW      SUBROUTINE EX19(PS,CS,PX,TA,RM,PCTS,RSTS,OWE,SWE,OSC,COVER,
CVK     1   PPX,PPCTS,PRM,TALR)
CGW     1   SDPT,PPX,PPCTS,PRM,TALR,ODPT)
CGW
      SUBROUTINE EXSNOW19(IDTS,IDT,IDA,IMN,IYR,
C     SNOW17 INPUT AND OUTPUT VARIABLES
     &                    PCP,PCTS,TMP,RAIM,SNEQV,SNOW,SNOWH,
     &                    PSFALL,PRAIN,AESC,
C     SNOW17 PARAMETERS
     &                    ALAT,SCF,MFMAX1,MFMIN1,UADJ1,SI,NMF1,TIPM1,
     &                    MBASE,PXTEMP,PLWHC,DAYGM,ELEV1,PA,ADC,
C     SNOW17 CARRYOVER VARIABLES
     &                    CS,TAPREV)
CGW
C.......................................
C     THIS IS THE EXECUTION SUBROUTINE FOR THE SNOW MODEL OPERATION
C        BASED ON NOAA TECH. MOMO. NWS HYDRO-17.
C.......................................
C     SUBROUTINE INITIALLY WRITTEN BY...
C        ERIC ANDERSON - HRL   MAY 1980
C
c        updated 3/10/97 by mbs for uadj mod
C
C        UPDATED 4/00 BY V. KOREN TO INCLUDE SNOW DEPTH/TEMPERATURE 
C        UPDATED 6/03 BY A. vo TO INCLUDE OBSERVED SNOW DEPTH
C
C        UPDATED 11/05 BY E. ANDERSON TO INCLUDE TAPREV CARRYOVER VALUE
C          AND TO CORRECT VARIOUS PROBLEMS - MAINLY SO THAT ALL
C          VERSIONS OF THE OPERATION THAT MAY BE ON THE OFS FILES WILL
C          EXECUTE PROPERLY.
C
C********************************************************************
CEA   VERSION 1 - BASIC SNOW-17 MODEL - NO SNOW DEPTH COMPUTATIONS
CEA                 SNOW DEPTH AND TEMPERATURE DON'T EXIST IN
CEA                 VERSION 1 CARRYOVER FILES - NOT REALISTIC TO
CEA                 ALWAYS USE A DENSITY OF 0.2 NO MATTER WHEN THE
CEA                 RUN STARTS TO GET AN INITIAL DEPTH - DEPTH
CEA                 COMPUTATIONS SHOULD NOT BE DONE FOR VERSION 1
CEA   VERSION 2 - SNOW DEPTH AND SNOW TEMPERATURE COMPUTATIONS
CEA                 ADDED - TWO NEW CARRYOVER VALUES IN CS ARRAY -
CEA   VERSION 3 - WAS CREATED WHEN OBSERVED SNOW DEPTH TIME SERIES
CEA                 ADDED - A NEW VERSION IS NOT NEEDED TO ADD THIS
CEA                 TIME SERIES - OBS. DEPTH WAS ADDED TO THE SNCO19
CEA                 COMMON BLOCK IN SOME ROUTINES (BUT NOT ALL),
CEA                 THOUGH IT WAS NEVER ADDED TO THE CS ARRAY AND
CEA                 THUS NOT WRITTEN TO THE OFS FILES.  vERSION 3
CEA                 FILES SHOULD BE EXECUTED JUST LIKE FOR VERSION 2
CEA   VERSION 4 - TAPREV WAS ADDED TO THE SNCO19 COMMON BLOCK AND THE
CEA                 CS ARRAY - THIS WAS DONE SO THAT NO MATTER WHAT
CEA                 START DATE WAS USED FOR AN OFS RUN THE RESULTS
CEA                 SHOULD BE EXACTLY THE SAME.  PREVIOUSLY THERE
CEA                 WOULD BE SLIGHT DIFFERENCES AS THE INITIAL VALUE
CEA                 OF TAPREV WAS SET TO THE AIR TEMPERATURE FOR THE
CEA                 FIRST PERIOD IN THE RUN.
C********************************************************************
C.......................................
CGW Added below by GSW
      REAL PX(48),RM(48)
      REAL MFMAX,MFMIN,NMF,LIQW,NEGHS,MELT,LIQWMX,MFC,PSF,PRF,CAESC
      REAL SMFV(12),AE(2,14)
      INTEGER JULDAY(12), IVER

C     FORCINGS
      INTEGER, INTENT(IN) :: IMN, IYR, IDT, IDA
      INTEGER, INTENT(IN) :: IDTS
      REAL, INTENT(IN) :: PCP,TMP,PCTS

C     STATES
      REAL, INTENT(INOUT) :: TAPREV
      REAL, DIMENSION(19), INTENT(INOUT) :: CS

C     PARAMETERS
      REAL, INTENT(IN) :: ALAT, SCF, MFMAX1, MFMIN1, UADJ1, SI, NMF1
      REAL, INTENT(IN) :: TIPM1
      REAL, INTENT(IN) :: MBASE, PXTEMP, PLWHC, DAYGM, ELEV1, PA
      REAL, DIMENSION(11), INTENT(IN) :: ADC
 
C     OUTPUT
      REAL, INTENT(OUT) :: RAIM, SNEQV, SNOW, SNOWH
      REAL, INTENT(OUT) :: PSFALL, PRAIN, AESC
CGW Added above by GSW


CGW      REAL MFMAX,MFMIN,NMF,LIQW,NEGHS,MBASE,MFC
CGW      DIMENSION PS(*),CS(*),PX(*),TA(*),RM(*),PCTS(*),OWE(*),SWE(*)
CGW      DIMENSION OSC(*),COVER(*),TALR(*),PPX(*),PPCTS(*),PRM(*),RSTS(*)
CGW      DIMENSION SNAME(2),LASTDA(12),IDANG(12),CT(20)
CVK
CGW      DIMENSION SDPT(*)
CGW      DIMENSION ODPT(*)

      DIMENSION PS(48),TA(48),OWE(48),SWE(48)
      DIMENSION OSC(48),COVER(48),TALR(48),PPX(48)
      DIMENSION PPCTS(48),PRM(48),RSTS(48)
      DIMENSION SNAME(2),LASTDA(12),IDANG(12),CT(20)
CVK
      DIMENSION SDPT(48)
      DIMENSION ODPT(48)
C
C     COMMON BLOCKS
CGW      INCLUDE 'common/fdbug'
CGW      INCLUDE 'common/ionum'
CGW      INCLUDE 'common/fctime'
CGW      INCLUDE 'common/fcary'
CGW      INCLUDE 'common/fnopr'
CGW      INCLUDE 'common/fsnw'
CGW      INCLUDE 'common/fengmt'
CGW      INCLUDE 'common/where'
CGW      INCLUDE 'common/fprog'
CGW      INCLUDE 'common/ffgctl'
CGW      COMMON/OUTCTL/IOUTYP
CGW      COMMON/SNPM19/ALAT,SCF,MFMAX,MFMIN,NMF,UADJ,SI,MBASE,PXTEMP,
CGW     1  PLWHC,TIPM,PA,ADC(11),LMFV,SMFV(12),LAEC,NPTAE,AE(2,14)
CVK  ADDED TWO MORE STATES: SNDPT, SNTMP
      COMMON/SNCO19/WE,NEGHS,LIQW,TINDEX,ACCMAX,SB,SBAESC,SBWS,
CVK     1  STORGE,AEADJ,NEXLAG,EXLAG(7)
CEA  ADDED TAPREV STATE - REMOVED OBS DEPTH FROM COMMON
CEA     1  STORGE,AEADJ,NEXLAG,EXLAG(7),SNDPT,SNTMP
     1  STORGE,AEADJ,NEXLAG,EXLAG(7),SNDPT,SNTMP
      COMMON/SUMS19/SPX,SSFALL,SRM,SMELT,SMELTR,SROBG,DSFALL,DRAIN,
     1 DQNET,DRSL,NDRSP
      COMMON/SNUP19/MFC,SFALLX,WINDC,SCTOL,WETOL,SNOF,UADJC
      COMMON/FSNWUP/IUPWE,IUPSC
CGW      COMMON/FSDATA/NSDV,JHSNW(10),WESNW(10),AESNW(10),WEADD(10)
CGW      COMMON/FPXTYP/NRSV,IJHRS(20),LJHRS(20),PCTSV(20)
CGW      COMMON/FMFC19/NMFC,IJHMF(20),LJHMF(20),VMFC(20)
CGW      COMMON/FADJ19/NUADJ,IJHUA(20),LJHUA(20),VUADJ(20)
CEA  ISTRT FLAG NO LONGER NEEDED
CEA      common/sn19flg/ISTRT
C
C    ================================= RCS keyword statements ==========
CGW      CHARACTER*68     RCSKW1,RCSKW2
CGW      DATA             RCSKW1,RCSKW2 /                                 '
CGW     .$Source: /fs/hseb/ob90/ohd/ofs/src/fcst_snow/RCS/ex19.f,v $
CGW     . $',                                                             '
CGW     .$Id: ex19.f,v 1.15 2006/10/06 11:25:51 xfan Exp $
CGW     . $' /
C    ===================================================================
C
C     DATA STATEMENTS
      DATA SNAME/4HEX19,4H    /
CEA CORRECTED VALUE FOR JUNE - SEPT 2006
CEA      DATA LASTDA/31,28,31,30,31,31,31,31,30,31,30,31/
      DATA LASTDA/31,28,31,30,31,30,31,31,30,31,30,31/
      DATA IDANG/285,316,345,10,40,71,101,132,163,193,224,254/
      DATA JSNW/4HSNW1/
CGW Added to convert IDA to a Julian Day
      DATA JULDAY/0,31,59,90,120,151,181,212,243,273,304,334/
C.......................................
C     TRACE LEVEL=1,DEBUG FLAG=IBUG.
CGW      CALL FPRBUG(SNAME,1,19,IBUG)
CGW      IF (IBUG.EQ.0) GO TO 90
CGW      IF (IFBUG(JSNW).EQ.1) IBUG=2
C.......................................
C     DEFINE CONSTANT
C     IF SNOWFALL IS LESS THAN HSNOF/HR -- DO NOT
C        LEAVE CURRENT DEPLETION CURVE.

CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 161'

   90 HSNOF=0.2


CGW Added this previously unassigned varible
      NOSNOW=0

CEA   SPX AND SRM DON'T NEED TO BE SET AT THIS POINT - DONE LATER
CEA      spx=0
CEA      srm=0
CEA  ISTRT FLAG NO LONGER NEEDED
cav  moved ISTRT flag from pack19 to ex19.  This to fix
cav  problem with sim snow depth value changes when 
cav  perform a rerun without making a new mod in ifp.  
CEA  WHAT IS NEXT COMMENT STATEMENT ABOUT????
cav  Reset flag when ofs executing fcst/IFP/calb/opt3.
cav  esp reset ISTRT to 0 in efaze2
CEA      if(MAINUM .NE. 2)ISTRT = 0 
C.......................................
C     VALUES OF CONTROL VARIABLES.
C        THOSE NEEDED IN ALL CASES FIRST.
CEA  GET VERSION NUMBER ASSOCIATED WITH THE PARAMETERS AND CARRYOVER
CGW      IVER=PS(1)
      IVER=4
CGW      IDT=PS(14)
      FIDT=IDT
CGW      ITPX=PS(10)
      ITPX=IDT
      SNOF=HSNOF*ITPX
      NDT=IDT/ITPX
      NEXLAG=5/ITPX+2
CGW      LRM=PS(17)
      LRM=0
CGW      LSWE=PS(20)
      LSWE=0
      IF (LSWE.EQ.0) GO TO 103
      ITSWE=PS(LSWE+3)
      NSWE=24/ITSWE
CGW  103 LCOVER=PS(22)
  103 LCOVER=0
CVK      IF (LCOVER.EQ.0) GO TO 104
      IF (LCOVER.EQ.0) GO TO 216
      ITSSC=PS(LCOVER+3)
      NSSC=24/ITSSC
CVK -----------------------------
CGW  216 LSDPT=PS(31)
  216 LSDPT=0
      IF (LSDPT.EQ.0) GO TO 104
      ITSDPT=PS(LSDPT+3)
      NSDPT=24/ITSDPT
CVK ----------------------------
CGW  104 LSUMS=PS(23)
  104 LSUMS=0
CGW      LPM=PS(25)
CGW  Dummy varible used
      LPM=64
CGW      IPRINT=PS(24)
      IPRINT=0
CGW      IF (MAINUM.NE.1) GO TO 102
CGW      IF (IPRSNW.EQ.0) GO TO 102
CGW      IF (IPRSNW.EQ.1) IPRINT=1
CGW      IF (IPRSNW.EQ.-1) IPRINT=0
CGW  102 IF(NOPROT.EQ.1) IPRINT=0
CGW      IF(NOSNOW.EQ.1) IPRINT=0
C     THE COMMENT SHOULD BE REMOVED FROM THE NEXT LINE WHEN
C     THE SNOW MODEL DISPLAY IS ADDED TO THE ICP PROGRAM.
CGW      IF (IOUTYP.EQ.2) IPRINT=0
CGW      NPS=PS(16)
CGW   Dummy varible for NPS
      NPS=64
      IF(NOSNOW.EQ.1) GO TO 101
C
C     THOSE ONLY NEEDED IF NOSNOW=0
CGW      LPCTS=PS(18)
CGW Set as 1 because we are using PCPS as input
      LPCTS=1
CGW      LOWE=PS(19)
      LOWE=0
      IF (LOWE.EQ.0) GO TO 108
      ITOWE=PS(LOWE+3)
      NOWE=24/ITOWE
CGW  108 LOSC=PS(21)
  108 LOSC=0
      IF (LOSC.EQ.0) GO TO 109
      ITOSC=PS(LOSC+3)
      NOSC=24/ITOSC
CEA  ONLY NEED TO CHECK PS(32) FOR OBS DEPTH, NOT VERSION NUMBER
CEA   PS(32) IS ALWAYS ZERO FOR VERSIONS 1 AND 2.
CEA    CHANGED itosn TO ITODPT AND LOSDPT TO LODPT
CGW  109 LODPT=PS(32)
  109 LODPT=0
cav observed snow depth   
CEA  109  if(ps(1) .gt. 2.01) then
cew new version (3 and greater)
CEA      LOSDPT=PS(32)
cew         initialize itosn
CEA         itosn=0
CEA      else
cew old version (1 and 2)
CEA         LOSDPT=0
CEA         itosn=0
CEA      endif         
      IF (LODPT.EQ.0) GO TO 201
      ITODPT=PS(LODPT+3)
CEA   IF LODPT DEFINED, THE TIME INTERVAL IS DEFINED
CEA      if(itosn .ne. 0) NOSN=24/ITODPT
CEA   CHANGE NOSN TO NODPT
      NODPT=24/ITODPT
cav  109 LADC=PS(26)
CGW  201 LADC=PS(26)
CGW Dummy Varible Used
  201 LADC=64
CGW      LTAPM=PS(27)
      LTAPM=0
CGW      LUPPM=PS(28)
      LUPPM=0
CGW      LMFV=PS(29)
      LMFV=0
CGW Added this as needed for PACK19 (Seasonal Variation set to 0)
      SMFV=0
CGW      LAEC=PS(30)
      LAEC=0
C.......................................
C     DEBUG OUTPUT - PRINT PS() AND CS()
CGW   Dummy varible
  101 GSW=1
CGW  101 IF(IBUG.EQ.0) GO TO 100
CGW      WRITE(IODBUG,900) NOSNOW
CGW  900 FORMAT(1H0,43HSNOW-17 DEBUG--CONTENTS OF PS AND CS ARRAYS,5X,7HNOS
CGW     1NOW=,I1)
CGW      WRITE(IODBUG,901) (PS(I),I=1,NPS)
CGW  901 FORMAT(1H0,15F8.3)
CGW      WRITE(IODBUG,902) (PS(I),I=1,NPS)
CGW  902 FORMAT(1H0,15(4X,A4))
CEA   COMPUTE LENGTH OF CS ARRAY BASED ON VERSION NUMBER
      IF (IVER.EQ.1) NCO=10+NEXLAG
      IF ((IVER.GT.1).AND.(IVER.LT.4)) NCO=12+NEXLAG
      IF (IVER.GT.3) NCO=13+NEXLAG
CGW      WRITE(IODBUG,901) (CS(I),I=1,NCO)
C.......................................
C     GET TEMPERATURE INFORMATION AND LAPSE RATES FOR EACH IDT PERIOD
C        IF NEEDED.
  100 IF(NOSNOW.EQ.1) GO TO 110
      IF(LTAPM.EQ.0) GO TO 200
      TAELEV=PS(LTAPM)
      ELEV=PS(LPM+1)
      EDIFF=(TAELEV-ELEV)*0.01
      J=24/IDT
      TALMAX=PS(LTAPM+1)
      TALMIN=PS(LTAPM+2)
      DIFF=TALMAX-TALMIN
      FLOCAL=LOCAL
      DO 105 I=1,J
      FI=I
      TI=(FI-1.0)*FIDT+0.5*FIDT
      TL=TI+FLOCAL
      IF(TL.GT.24.0) TL=TL-24.0
      IF(TL.LT.15.0) GO TO 106
      TALR(I)=TALMAX-((TL-15.0)/15.0)*DIFF
      GO TO 105
  106 IF(TL.GT.6.0) GO TO 107
      TALR(I)=TALMIN+((6.0-TL)/15.0)*DIFF
      GO TO 105
  107 TALR(I)=TALMIN+((TL-6.0)/9.0)*DIFF
  105 CONTINUE
C.......................................
C     CHECK FOR DEBUG OUTPUT
CGW      IF(IBUG.EQ.0) GO TO 200
CGW      WRITE(IODBUG,903)
CGW  903 FORMAT(1H0,27HAIR TEMPERATURE LAPSE RATES)
CGW      WRITE(IODBUG,901) (TALR(I),I=1,J)
C.......................................
C     RAIN-SNOW ELEVATION PARAMETERS

  200 IF (LAEC.EQ.0) GO TO 110
      NPTAE=PS(LAEC)
      DO 205 I=1,NPTAE
      J=LAEC+5+(I-1)*2
      AE(1,I)=PS(J)
      AE(2,I)=PS(J+1)
  205 CONTINUE
C.......................................
C     PARAMETER VALUES
CGW  110 PXADJ=PS(LPM)
CGW Set PXADJ as 1 due to it being already used in f90 wrapper
  110 PXADJ=1
CGW Set AE to 0
      AE=0
CEA  IF NOSNOW=1 GO DIRECTLY TO SETTING CARRYOVER TO ZERO
CEA      IF(NOSNOW.EQ.1) GO TO 115
      IF(NOSNOW.EQ.1) GO TO 1161
CGW      ELEV=PS(LPM+1)*0.01
      ELEV=ELEV1*0.01
CGW      PA=29.9-0.335*ELEV+0.00022*(ELEV**2.4)
CGW      PA=33.86*PA
CGW      SCF=PS(LPM+2)
CGW      MFMAX=PS(LPM+3)
CGW      MFMAX=(MFMAX*FIDT)/6.0
      MFMAX=(MFMAX1*FIDT)/6.0
CGW      MFMIN=PS(LPM+4)
CGW      MFMIN=(MFMIN*FIDT)/6.0
      MFMIN=(MFMIN1*FIDT)/6.0
CGW      NMF=PS(LPM+7)
CGW      NMF=(NMF*FIDT)/6.0
CGW      NMF=(NMF*FIDT)/6.0
      NMF=(NMF1*FIDT)/6.0
CGW      UADJ=PS(LPM+5)
CGW      UADJ=(UADJ*ITPX)/6.0
      UADJ=(UADJ1*ITPX)/6.0
CGW      SI=PS(LPM+6)
CGW      GM=PS(LPM+12)
      GM=DAYGM
      PGM=(GM*FIDT)/24.0
CGW      MBASE=PS(LPM+9)
CGW      PXTEMP=PS(LPM+10)
CGW      PLWHC=PS(LPM+11)
CGW      TIPM=PS(LPM+8)
CGW      TIPM=1.0-((1.0-TIPM)**(FIDT/6.0))
      TIPM=1.0-((1.0-TIPM1)**(FIDT/6.0))
CGW      ALAT=PS(LPM+13)
C
C     AREAL DEPLETION CURVE
CGW      ADC(1)=0.05
CGW      DO 111 I=2,10
CGW      J=LADC+I-2
CGW  111 ADC(I)=PS(J)
CGW      ADC(11)=1.0
      IF(LMFV.EQ.0) GO TO 32
      DO 31 I=1,12
       J=LMFV+I-1
   31  SMFV(I)=PS(J)
C
C     PASS PARAMETER VALUES TO GRAPHICS INTERFACE IF REQUESTED.
CGW   Dummy varible
   32 GSW=1
CGW   32 IF (IOUTYP.EQ.0) GO TO 30
CGW      IF (IDA.NE.IDARUN) GO TO 30
C
CGW      CALL ICPI19(OPNAME,IDT,ITPX,PXADJ,ELEV,LTAPM,TAELEV,SCF,
CGW     1  MFMAX,MFMIN,NMF,UADJ,SI,GM,MBASE,PXTEMP,PLWHC,TIPM,ALAT,
CGW     2  ADC,LMFV,SMFV,LAEC,NPTAE,AE,MAINUM)
C.......................................
C     UPDATING PARAMETERS
CGW   30 IF(MAINUM.GT.2) GO TO 112
CGW Redirected to avoid the PS varible
      IF(LUPPM.EQ.0) GO TO 112
C
C     OPERATIONAL PROGRAMS - ALL PARAMETERS DEFINED.
      WETOL=PS(LUPPM)
      SCTOL=PS(LUPPM+1)
      MFC=1.0
C
c        next statement by mbs 3/13/97 for uadj mod
         UADJC=1.0
C
      SFALLX=PS(LUPPM+5)
      WINDC=PS(LUPPM+6)
      GO TO 115
C
C     CALIBRATION PROGRAMS
  112 IUPWE=0
      IUPSC=0
      IF(LUPPM.EQ.0) GO TO 114
      IF(LOWE.GT.0) IUPWE=1
      IF(LOSC.GT.0) IUPSC=1
      WETOL=PS(LUPPM)
      SCTOL=PS(LUPPM+1)
  114 MFC=1.0
C
c        next statement by mbs 3/13/97 for uadj mod
         UADJC=1.0
C
      SFALLX=1.0
      WINDC=1.0
C.......................................
C     CARRYOVER VALUES.
  115 WE=CS(1)
      NEGHS=CS(2)
      LIQW=CS(3)
      TINDEX=CS(4)
      ACCMAX=CS(5)
      SB=CS(6)
      SBAESC=CS(7)
      SBWS=CS(8)
      STORGE=CS(9)
      AEADJ=CS(10)
      TEX=0.0
      DO 116 I=1,NEXLAG
      EXLAG(I)=CS(10+I)
  116 TEX=TEX+EXLAG(I)
C
CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 449'

CVK  ADDED TWO MORE NEW STATES
CEW  Use stored carryover if this is version 1.1 or greater of parameters
cew  otherwise compute the new carryover values based on other parameters
cew   as is done in the fcinit ckco19.f routine.
CEA  CARRYOVER BASED ON VERSION NUMBER - DEPTH COMPUTATIONS NOT DONE IF
CEA    VERSION 1.
CEA      IF (PS(1) .GE. 1.1) THEN
CEA         SNDPT=CS(11+NEXLAG)        
CEA         SNTMP=CS(12+NEXLAG)
CEA      ELSE
CEA          SNDPT=0.1*WE/0.2
CEA	  SNTMP=TINDEX
CEA      ENDIF
      IF (IVER.EQ.1) THEN
CEA  VERSION 1 - NO DEPTH COMPUTATIONS
CEA    COMPUTED VALUES SET TO MISSING FOR DISPLAYS
        SNDPT=-999.
        SNTMP=-999.
      ELSE
CEA  IF NOT VERSION 1, THEN GET INITIAL VALUES FROM CARRYOVER
        SNDPT=CS(11+NEXLAG)
        SNTMP=CS(12+NEXLAG)
      ENDIF
CEA  TAPREV ONLY DEFINED IN VERSION 4 CARRYOVER
CGW Comment the next two lines out because TAPREV is now an input
CGW      TAPREV=-99.
CGW      IF (IVER.GT.3) TAPREV=CS(13+NEXLAG)

CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 480'

C
CEA  DON'T NEED NOSNOW CHECK SINCE NOSNOW MUST BE .NE. 1 TO GET
CEA    TO THIS POINT.
CEA      IF(NOSNOW.EQ.0) GO TO 117
      GO TO 117
C
C     IF NOSNOW=1 SET SNOW CARRYOVER TO ZERO.
 1161 CALL ZERO19
      TAPREV=-99.
      IF (IVER.EQ.1) THEN
        SNDPT=-999.
        SNTMP=-999.
      ENDIF
      TEX=0.0
      TWE1=0.0
      CHGWE=0.0
      GO TO 118
C.......................................
C     INITIAL VALUES
  117 TWE=WE+LIQW+TEX+STORGE
      TWE1=TWE
      CHGWE=0.0

CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 506'
C
C     CHECK IF INITIAL WATER-EQUIVALENT OR SNOW COVER ARE CHANGED
C        BY MOD INPUT.  OPERATIONAL ONLY.     
CGW Added this to skip this section
      GO TO 119

      IF(MAINUM.NE.1) GO TO 119
      JH=(IDA-1)*24+IHR-IDT
      IF(NSDV.EQ.0) GO TO 119
      DO 10 I=1,NSDV
      N=I
      IF(JH.EQ.JHSNW(I)) GO TO 11
  10  CONTINUE
      GO TO 119
  11  POWE=WESNW(N)
      POSC=AESNW(N)


CGW      IF (WEADD(N).LT.0.0) GO TO 14
CGW      IF (WESNW(N).LT.0.0) GO TO 13
CGW      POWE=POWE+WEADD(N)
      GO TO 14
CGW   13 POWE=TWE+WEADD(N)
C
   14 IF((POWE.LT.0.0).AND.(POSC.LT.0.0))GO TO 119
C
C     COMPUTE AREAL EXTENT BASED ON CONDITIONS AT THE START OF THE RUN.
      AESC=0.0
      IF(TWE.EQ.0.0) GO TO 12
      CALL AESC19(WE,LIQW,ACCMAX,SB,SBAESC,SBWS,SI,ADC,AEADJ,AESC)
  12  PCOVER=AESC 
C
C     MAKE UPDATE.
      CWE=TWE
      CAESC=PCOVER
CGW      CALL UPDT19(POWE,POSC,TWE,PCOVER,IUPWE,IUPSC,WETOL,
CGW     1SCTOL,SI,ADC,IVER)
      IF ((TWE.EQ.CWE).AND.(PCOVER.EQ.CAESC)) GO TO 119
      CHGWE=CHGWE+(TWE-CWE)
C
C     PRINT UPDATE IF PRINTSNOW ON.
CGW      IF(IPRINT.EQ.0) GO TO 119
CGW      WRITE(IPR,904)OPNAME,ISEG
CGW  904  FORMAT(1H0,51HINITIAL SNOW CONDITIONS CHANGED--(SNOW-17 OPERATION,
CGW      11X,2A4,1X,7HSEGMENT,1X,2A4,1H))
CGW       IF(METRIC.EQ.0) GO TO 15
CGW       WRITE(IPR,905)CWE,TWE,CAESC,PCOVER
CGW  905  FORMAT(1H ,10X,12HWE(MM)  OLD=,F5.0,2X,4HNEW=,F5.0,5X,
CGW      1   16HSNOW COVER  OLD=,F4.2,2X,4HNEW=,F4.2)
CGW       GO TO 119
CGW   15  ECWE=CWE/25.4
CGW       ETWE=TWE/25.4
CGW       WRITE(IPR,906)ECWE,ETWE,CAESC,PCOVER
CGW  906  FORMAT(1H ,10X,12HWE(IN)  OLD=,F6.2,2X,4HNEW=,F6.2,5X,
CGW      1  16HSNOW COVER  OLD=,F4.2,2X,4HNEW=,F4.2)
CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 561'
  119 DSFALL=0.0
      DRAIN=0.0
      DQNET=0.0
      DRSL=0.0
      NDRSP=0
      PTWE=TWE
  118 SPX=0.0
      SSFALL=0.0
      SRM=0.0
      SMELT=0.0
      SMELTR=0.0
      SROBG=0.0
      ITITLE=0
      IC=1
      IRS=1
      IMF=1
C     FOLLOWING STATEMENT ADDED BY MBS 3/10/97 FOR UADJ MOD
      IUADJ=1
CGW Adding this, but only used if relying on RSL (which we are not)
      NPTAE = 14

C.......................................
C     INITIAL TIMING VALUES
CGW      KDA=IDA
      KHR=IHR
CGW Added to convert IDA to a Julian Day

      KDA = JULDAY(IMN)+IDA
      NEXLAG = 5/IDT + 2
C     I0 - DAY NUMBER FROM MARCH 21
      NDA=365
C     ADD 1 IF IT IS A LEAP YEAR
      IF (MOD(IYR,4).EQ.0 .AND. IMN .GE. 3) THEN
         KDA = KDA + 1
         NDA = NDA + 1
      END IF
C     COMPUTE DAY NUMBER FROM MARCH 21
      I0=JULDAY(3)+21
      I1=JULDAY(IMN)+IDA
      IF (KDA .GE. I0) THEN
        IDN=I1-I0
      ELSE
        IDN=NDA-(I0-I1)
      END IF
      LAST=0

CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 587'

CGW Added this to skip this section
      GO TO 310

      IF (MAINUM.NE.1) GO TO 310
      IF (IFFG.EQ.0) GO TO 310
C     CALCULATE THE COMPUTATIONAL PERIOD AT OR JUST BEFORE LSTCMPDY
      KDAFFG=LDACPD
      KHRFFG=(LHRCPD/IDT)*IDT
      IF (KHRFFG.GT.0) GO TO 310
      KDAFFG=KDAFFG-1
      KHRFFG=24
  310 IF (NOSNOW.EQ.1) GO TO 120
CGW      CALL MDYH1(KDA,KHR,I,J,L,N,100,0,TZ)
CGW      IDN=IDANG(I)+J
CGW      IMN=I
CGW      IYR=L
C.......................................
C     GET INPUT DATA NEEDED FOR COMPUTATIONAL PERIOD.
  120 KOFF=KDA-IDADAT
CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 609'
C
C     PRECIPITATION DATA - ALSO APPLY ADJUSTMENT
      LPX=KOFF*(24/ITPX)+KHR/ITPX
      DO 121 I=1,NDT
      J=LPX-(NDT-I)
CGW  121 PPX(I)=PX(J)*PXADJ
  121 PPX(I)=PCP
      IF(NOSNOW.EQ.1) GO TO 150
C
C     PERCENT SNOWFALL DATA
      DO 122 I=1,NDT
      IF(LPCTS.EQ.0) GO TO 123
      J=LPX-(NDT-I)
CGW      PPCTS(I)=PCTS(J)
      PPCTS(I)=PCTS
      GO TO 122
  123 PPCTS(I)=-999.0
  122 CONTINUE

CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 630'

CGW Added this to skip this section
      GO TO 124

C     RAINSNOW, uadj,  AND MFC MODS, OPERATIONAL PROGRAM ONLY
      IF (MAINUM.NE.1) GO TO 124
C     OVERRIDE FORM OF PRECIPITATION, IF MOD INPUT.
      IF(NRSV.EQ.0) GO TO 225
 128  IF(IRS.GT.NRSV) GO TO 225
      JH2=JH+IDT
      IF(JH2.LT.IJHRS(IRS)) GO TO 225
      JH1=JH2-IDT+ITPX
      IF(JH1.LT.IJHRS(IRS)) JH1=IJHRS(IRS)
      IF(JH2.GT.LJHRS(IRS)) JH2=LJHRS(IRS)
      J1=(JH1-JH)/ITPX
      J2=(JH2-JH)/ITPX
      DO 129 I=J1,J2
 129  PPCTS(I)=PCTSV(IRS)
      IF(JH2.LT.LJHRS(IRS)) GO TO 225
      IRS=IRS+1
      GO TO 128
C     DETERMINE MFC BASED ON MOD INPUT
  225 IF (NMFC.EQ.0) GO TO 1124
      IF (IMF.GT.NMFC) GO TO 229
      JH2=JH+IDT
      IF (JH2.LT.IJHMF(IMF)) GO TO 229
      MFC=VMFC(IMF)
      IF (JH2.LT.LJHMF(IMF)) GO TO 1124
      IMF=IMF+1
      GO TO 1124
  229 MFC=1.0
C ....................................................
C     UADJ MOD BY MIKE SMITH 3/10/97
C
C     DETERMINE UADJC BASED ON MOD INPUT
C      UADJC IS MULTIPLIER APPLIED TO UADJ PARAMETER
C
 1124 IF(NUADJ.EQ.0)      GO TO 124
      IF(IUADJ.GT.NUADJ)  GO TO 339
       JH2=JH+IDT
       IF(JH2.LT.IJHUA(IUADJ)) GO TO 339
        UADJC=VUADJ(IUADJ)
        IF(JH2.LT.LJHUA(IUADJ)) GO TO 124
        IUADJ=IUADJ+1
        GO TO 124
  339  UADJC=1.0
C.......................................................
CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 678'
C
C     AIR TEMPERATURE DATA - CORRECT FOR LAPSE RATE.
  124 L=KOFF*(24/IDT)+KHR/IDT
CGW      PTA=TA(L)
      PTA=TMP
      IF(LTAPM.EQ.0) GO TO 210
      I=KHR/IDT
      PTALR=TALR(I)
      PTA=PTA+EDIFF*PTALR
CEA  IF TAPREV CARRYOVER NOT AVAILABLE, SET TAPREV TO PTA
  210 IF ((TAPREV.LT.-98). AND.(IVER.GT.1)) TAPREV=PTA
C
C     RAIN-SNOW ELEVATION DATA
CEA  210 IF (LAEC.GT.0) GO TO 215
      IF (LAEC.GT.0) GO TO 215
      PRSL=-999.0
      GO TO 125
  215 PRSL=RSTS(L)

CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 700'
C
C     OBSERVED WATER-EQUIVALENT AND SNOW COVER DATA.
C        CHECK FOR RUN-TIME DATA FIRST - OPERATIONAL ONLY.
  125 POWE=-99.0
      POSC=-99.0

CGW Added this to skip this section
      GO TO 130

      IF(MAINUM.NE.1) GO TO 130
      JH=JH+IDT
      IF(NSDV.EQ.0) GO TO 130
      DO 126 I=1,NSDV
      N=I
      IF (JH.EQ.JHSNW(I)) GO TO 127
  126 CONTINUE
      GO TO 130
  127 POWE=WESNW(N)
      POSC=AESNW(N)
CGW      IF (WEADD(N).LT.0.0) GO TO 130
CGW      IF (WESNW(N).LT.0.0) GO TO 131
CGW      POWE=POWE+WEADD(N)
      GO TO 130
CGW  131 POWE=TWE+WEADD(N)
CGW   Dummy varible
  131 GSW=1
C
C     WATER-EQUIVALENT.
 130  IF(POWE.NE.-99.0) GO TO 137
      IF(LOWE.EQ.0) GO TO 133
      IF((KHR/ITOWE)*ITOWE.EQ.KHR) GO TO 134
 133  POWE=-999.0
      GO TO 137
 134  L=KOFF*NOWE+KHR/ITOWE
      POWE=OWE(L)
C
C     AREAL EXTENT
 137  IF(POSC.NE.-99.0) GO TO 141
      IF(LOSC.EQ.0) GO TO 138
      IF((KHR/ITOSC)*ITOSC.EQ.KHR) GO TO 139
 138  POSC=-999.0
      GO TO 141
 139  L=KOFF*NOSC+KHR/ITOSC
      POSC=OSC(L)
C
CEA   OBSERVED SNOW DEPTH FOR DISPLAY 
CEA 141  if(ITODPT .eq. 0)then
CEA         OSNDPT = -999.0
CEA         goto 140
CEA      end if
  141 IF (LODPT.EQ.0) GO TO 142
      IF ((KHR/ITODPT)*ITODPT.EQ.KHR) GO TO 143
  142 PODPT=-999.0
      GO TO 140
  143 L=KOFF*NODPT+KHR/ITODPT
      PODPT=ODPT(L)    
C.......................................
C     DETERMINE IF COMPUTATIONAL PERIOD IS IN THE FUTURE.
  140 IFUT=0
      IF(KDA.LT.LDACPD) GO TO 145
      IF((KDA.EQ.LDACPD).AND.(KHR.LE.LHRCPD)) GO TO 145
CGW      IFUT=1

CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 744'

C.......................................
C     PERFORM SNOW MODEL COMPUTATIONS FOR THE COMPUTATIONAL PERIOD.
CEA  ADD OBS. DEPTH AND VERSION NUMBER TO ARGUMENT LIST FOR PACK19
C
CEA  145 CALL PACK19(KDA,KHR,NDT,PTA,PPX,PPCTS,PRSL,POWE,POSC,PGM,PRM,TWE,
CEA     1PCOVER,CWE,CAESC,IFUT,IDT,IBUG,IDN,IMN,IYR,IOUTYP,OPNAME)
C
CGW  145 CALL PACK19(KDA,KHR,NDT,PTA,PPX,PPCTS,PRSL,POWE,POSC,PODPT,PGM,
CGW     1  PRM,TWE,PCOVER,CWE,CAESC,IFUT,IDT,IBUG,IDN,IMN,IYR,IOUTYP,
CGW     2  OPNAME,IVER)
CGW
CGW Write out all the arguments for testing CGW

CGW Write out all the arguments for testing CGW
CGW      write(*,*) 'START'
CGW      write(*,*) 'NDT', NDT
CGW      write(*,*) 'PTA', PTA
CGW      write(*,*) 'PPX', PPX(1)
CGW      write(*,*) 'PPCT', PPCTS(1)
CGW      write(*,*) 'PRSL', PRSL
CGW      write(*,*) 'POWE', POWE
CGW      write(*,*) 'POSC', POSC
CGW      write(*,*) 'PGM', PGM
CGW      write(*,*) 'TWE', TWE
CGW      write(*,*) 'IFUT', IFUT
CGW      write(*,*) 'IDT', IDT
CGW      write(*,*) 'IDN', IDN
CGW      write(*,*) 'IMN', IMN
CGW      write(*,*) 'IYR', IYR
CGW      write(*,*) 'TAPREV', TAPREV
CGW      write(*,*) 'ALAT', ALAT
CGW      write(*,*) 'SCF', SCF
CGW      write(*,*) 'MFMAX', MFMAX
CGW      write(*,*) 'MFMIN', MFMIN
CGW      write(*,*) 'UADJ', UADJ
CGW      write(*,*) 'SI', SI
CGW      write(*,*) 'NMF', NMF
CGW      write(*,*) 'TIPM', TIPM
CGW      write(*,*) 'MBASE', MBASE
CGW      write(*,*) 'PXTEMP', PXTEMP
CGW      write(*,*) 'PLWHC', PLWHC
CGW      write(*,*) 'DAYGM', DAYGM
CGW      write(*,*) 'ADC', ADC
CGW      write(*,*) 'PA', PA
CGW      write(*,*) 'LMFV', LMFV
CGW      write(*,*) 'SMFV', SMFV(1)
CGW      write(*,*) 'LAEC', LAEC
CGW      write(*,*) 'NPTAE', NPTAE
CGW      write(*,*) 'AE', AE(1,1)
CGW      write(*,*) 'IVER', IVER
CGW Write out all the arguments for testing CGW

  145 CALL PACK19(NDT,PTA,PPX,PPCTS,PRSL,POWE,POSC,PGM,PRM,TWE,
C                 LAST UPDATE: 06/22/95.14:05:09 BY $WC30EA
     1            COVER,CWE,CAESC,IFUT,IDT,IDN,IMN,IYR,
C     PREVIOUS TEMPERATURE
     1            TAPREV,
C     SNOWFALL (SXFALL),SNOW DENSITY (DS)
     1            SXFALL,DS,PSF,PRF,
C     SNOW17 PARAMETERS
     &            ALAT,SCF,MFMAX,MFMIN,UADJ,SI,NMF,TIPM,MBASE,
     &            PXTEMP,PLWHC,DAYGM,ADC,
C     SNOW17 
     &            PA,LMFV,SMFV,LAEC,NPTAE,AE,
C     DEPTH COMPUTATIONS AND CARRYOVER
     &            IVER)
CGW
CGW Write out all the arguments for testing CGW
CGW      write(*,*) 'CAESC', CAESC
CGW      write(*,*) 'CWE', CWE
CGW      write(*,*) 'COVER', COVER
CGW      write(*,*) 'SXFALL', SXFALL
CGW      write(*,*) 'DS', DS
CGW      write(*,*) 'PSF', PSF
CGW      write(*,*) 'PRM', RM(1)
CGW      write(*,*) 'END'
CGW Write out all the arguments for testing CGW

CGW      IF (TWE.NE.CWE) CHGWE=CHGWE+(TWE-CWE)
C
C.......................................
C     STORE RESULTS - RAIN+MELT FIRST.
      IF (LRM.EQ.0) GO TO 155
      DO 151 I=1,NDT
      J=LPX-(NDT-I)
  151 RM(J)=PRM(I)
      GO TO 155
C
C     NOSNOW=1 RESULTS.
  150 DO 152 I=1,NDT
      SPX=SPX+PPX(I)
      SRM=SRM+PPX(I)
      SROBG=SROBG+PPX(I)
      TWE=0.0
      PCOVER=0.0
      IF (LRM.EQ.0) GO TO 152
      J=LPX-(NDT-I)
      RM(J)=PPX(I)
  152 CONTINUE
C
C     SIMULATED WATER-EQUIVALENT
  155 IF(LSWE.EQ.0) GO TO 160
      IF((KHR/ITSWE)*ITSWE.NE.KHR) GO TO 160
      L=KOFF*NSWE+KHR/ITSWE
      SWE(L)=TWE
C
C     SIMULATED AREAL SNOW COVER
CVK  160 IF(LCOVER.EQ.0) GO TO 170
CVK      IF((KHR/ITSSC)*ITSSC.NE.KHR) GO TO 170
  160 IF(LCOVER.EQ.0) GO TO 217
      IF((KHR/ITSSC)*ITSSC.NE.KHR) GO TO 217            
      L=KOFF*NSSC+KHR/ITSSC
      COVER(L)=PCOVER
C
CVK  NEW SIMULATED SNOW DEPTH TIME SERIES  ----
  217 IF(LSDPT .EQ. 0) GOTO 170
      IF((KHR/ITSDPT)*ITSDPT .NE. KHR) GOTO 170
      L=KOFF*NSDPT+KHR/ITSDPT
      SDPT(L)=SNDPT
CVK ------------------------------------------
C.......................................
C     PRINT RESULTS IF REQUESTED.
  170 IF(IPRINT.EQ.0) GO TO 175
C
CGW      CALL PRSN19(KDA,KHR,IPRINT,ITITLE,PS(2),TWE,CWE,PTWE,POWE,PCOVER,
CEA   ADD OBS. DEPTH TO ARGUMENT LIST
CEA     1   CAESC,POSC,LAEC,MOPR,IDPR,IYPR,IHPR)
CGW     1   CAESC,POSC,PODPT,LAEC,MOPR,IDPR,IYPR,IHPR)
C     
C.......................................
CEA  UPDATE TAPREV FOR CARRYOVER OR NEXT COMPUTATIONAL PERIOD
  175 IF (IVER.GT.1) TAPREV=PTA

CGW Skipping to the end
      GO TO 331

C     STORE FFG CARRYOVER IF REQUESTED.
CEA  175 IF (IFILLC.EQ.0) GO TO 180
      IF (IFILLC.EQ.0) GO TO 180
      IF (MAINUM.NE.1) GO TO 180
      IF (IFFG.EQ.0) GO TO 180
      IF ((KDA.EQ.KDAFFG).AND.(KHR.EQ.KHRFFG)) GO TO 320
      GO TO 180
  320 CALL CSAV19(CS,IVER)
C.......................................
C     STORE CARRYOVER IF REQUESTED.
  180 IF(IFILLC.EQ.0) GO TO 190
      IF(NCSTOR.EQ.0) GO TO 190
      IF(IC.GT.NCSTOR) GO TO 190
      IF((KDA.EQ.ICDAY(IC)).AND.(KHR.EQ.ICHOUR(IC))) GO TO 185
      GO TO 190
C
C     SAVE CARRYOVER
  185 CALL CSAV19(CT,IVER)
C
CVK  two new states added
CEA  TAPREV ADDED FOR VERSION 4
      NCO=10+NEXLAG
CEA      IF(PS(1).GE.1.1) NCO=12+NEXLAG
      IF ((IVER.GT.1).AND.(IVER.LT.4)) NCO=12+NEXLAG
      IF (IVER.GT.3) NCO=13+NEXLAG     
      CALL FCWTCO(KDA,KHR,CT,NCO)
      IC=IC+1
C.......................................
C     CHECK FOR END OF EXECUTION PERIOD
  190 IF((KDA.EQ.LDA).AND.(KHR.EQ.LHR)) GO TO 195
C
C     INCREMENT TIMES FOR NEXT COMPUTATIONAL PERIOD.
      KHR=KHR+IDT
      IF(KHR.LE.24) GO TO 191
      KHR=IDT
      KDA=KDA+1
      IF (NOSNOW.EQ.0) IDN=IDN+1
      DSFALL=0.0
      DRAIN=0.0
      DQNET=0.0
      DRSL=0.0
      NDRSP=0
  191 IF(ITITLE.EQ.0) GO TO 120
      IF(LAST.GT.0) GO TO 192
      LAST=LASTDA(MOPR)
      IF((MOPR.EQ.2).AND.((IYPR/4)*4.EQ.IYPR)) LAST=LAST+1
  192 IHPR=IHPR+IDT
      IF(IHPR.LE.24) GO TO 120
      IHPR=IHPR-24
      IDPR=IDPR+1
      IF(IDPR.LE.LAST) GO TO 120
      IDPR=1
      MOPR=MOPR+1
      IF(MOPR.LE.12) GO TO 193
      MOPR=1
      IYPR=IYPR+1
  193 LAST=LASTDA(MOPR)
      IF((MOPR.EQ.2).AND.((IYPR/4)*4.EQ.IYPR)) LAST=LAST+1
      GO TO 120
C.......................................
C     END OF EXECUTION PERIOD.
C     COMPUTE WATER BALANCE FOR THE EXECUTION PERIOD.
CGW   Dummy varible
  195 GSW=1
CGW  195 SBAL=SPX-SRM-(TWE-TWE1)+CHGWE
CGW      IF(ABS(SBAL).LE.1.0) GO TO 196
CGW      WRITE(IPR,911) SBAL
CGW  911 FORMAT(1H0,47H**WARNING** SNOW BALANCE RESIDUAL EXCEEDS 1 MM., 3X,
CGW     19HRESIDUAL=,F7.2)
CGW      CALL WARN
CGW      IF (IBUG.GT.0) WRITE(IODBUG,913) SBAL,SPX,SRM,TWE,TWE1,CHGWE
CGW  913 FORMAT (1H ,28HWATER BALANCE VALUES - SBAL=,F7.2,5H SPX=,F7.2,
CGW     1  5H SRM=,F7.2,5H TWE=,F7.2,6H TWE1=,F7.2,7H CHGWE=,F7.2)
C
C     STORE SUMS IF REQUESTED.
  196 IF(LSUMS.EQ.0) GO TO 197
      PS(LSUMS)=SPX
      PS(LSUMS+1)=SSFALL
      PS(LSUMS+2)=SRM
      PS(LSUMS+3)=SMELT
      PS(LSUMS+4)=SMELTR
      PS(LSUMS+5)=SROBG
      PS(LSUMS+6)=SBAL
C
C     STORE CARRYOVER IF REQUESTED.
  197 IF(IFILLC.EQ.0) GO TO 198
      IF (MAINUM.NE.1) GO TO 330
      IF (IFFG.NE.0) GO TO 198
  330 CALL CSAV19(CS,IVER)

CGW
CGW ADDED this section below to avoid using CSAV19 and to match how it was done previously
  331 TEX = 0.0
      DO I=1,NEXLAG
        TEX = TEX + EXLAG(I)
      END DO

      TWE=WE+LIQW+TEX+STORGE

      SNOW=SXFALL
      PSFALL=PSF
      PRAIN=PRF
      AESC=CAESC
      RAIM=PRM(1)
      SNEQV=TWE/1000.
      SNOWH=SNDPT/100.
C.......................................
C     SAVE CARRYOVER VALUES.
      CS(1)=WE
      CS(2)=NEGHS
      CS(3)=LIQW
      CS(4)=TINDEX
      CS(5)=ACCMAX
      CS(6)=SB
      CS(7)=SBAESC
      CS(8)=SBWS
      CS(9)=STORGE
      CS(10)=AEADJ
      DO I=1,NEXLAG
         CS(10+I)=EXLAG(I)
      END DO
      CS(11+NEXLAG)=SNDPT
      CS(12+NEXLAG)=SNTMP  
CGW ADDED this section above to avoid using CSAV19 and to match how it was done previously
CGW Debugging print out.  ERASE BEOFORE SHARING
CGW      write(*,*) 'TO LINE 953'
CGW
C.......................................
C     PRINT DEBUG OUTPUT IF REQUESTED.
CGW   Dummy varible
  198 GSW=1
CGW  198 IF(IBUG.EQ.0) GO TO 199
CGW      WRITE(IODBUG,900) NOSNOW
CGW      WRITE(IODBUG,901) (PS(I),I=1,NPS)
CGW      WRITE(IODBUG,901) (CS(I),I=1,NCO)
C.......................................
CGW  199 IF(ITRACE.GE.1) WRITE(IODBUG,912)
CGW 912 FORMAT(1H0,12H** EXIT EX19)
      RETURN
      END