C MEMBER FROST2
C REPLACEMENT OF OLD FROST1
C
C12/02  V.K.  ADDED PARAMETER IVERS
CC      SUBROUTINE FROST2_1(PX,TA,LWE,WE,ISC,AESC,SH,DT)
      SUBROUTINE FROST2_1(PX,TA,WE,AESC,SH,DT,iprint,iout,iopt)

CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
CC    PURPOSE:  TO CALCULATE SOIL TEMPERATURE & ICE CONTENT
C     WRITTEN BY VICTOR KOREN - HRL   JANUARY 2000
CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC

C  DEFAULT CONSTANTS
      PARAMETER (T0 = 273.16)
C  DTSIM - SIMULATION TIME STEP OF FROZEN GROUND MODEL, IN SEC.
C  IT CAN BE LESS THAN SAC-SMA TIME STEP, BUT NOT GREATER.
      PARAMETER (DTSIM = 1800.)

cv07      REAL SMC   ( 10 )
cv07      REAL SH2O  ( 10 )
      REAL RHSTS ( 10 )
      REAL STC   ( 10 )
      REAL STCOUT ( 10 )
      REAL ZSOIL ( 10 )
      REAL DSW   ( 10 )
      INTEGER IDSW (10)

cc      SAVE NSOIL,ZSOIL,TBOT,ZBOT
      SAVE NSOIL,ZSOIL
cv07      SAVE UZTWC0,UZFWC0,LZTWC0,LZFSC0,LZFPC0
cv07      SAVE SMC,SH2O
      SAVE DTFRZ,ISTART,IDT,NLOOP
      
      INTEGER ISTART/0/,NLOOP/0/
      REAL SMAX,PSISAT,BRT,QUARTZ,STYPE
      REAL DT,PX,TA,WE,AESC
      REAL LZTWM,LZFSM,LZFPM,LZSK,LZPK,LZTWC,LZFSC,LZFPC
      REAL LZTWH,LZFSH,LZFPH,LZTWC0,LZFSC0,LZFPC0

CVK_02  NEW COMMON STATEMENT FOR DESIRED SOIL LAYERS
      INTEGER NINT/5/,NINTW/5/
      REAL TSINT(10),SWINT(10),SWHINT(10)
      REAL DSINT(10)/0.05,0.1,0.2,0.5,1.0,1.5,2.0,0.,0.,0./
      REAL DSINTW(10)/0.05,0.1,0.2,0.5,1.0,1.5,2.0,0.,0.,0./
      REAL TSTMP(10),DSMOD(10),SWTMP(10),SWHTMP(10)
      SAVE DSINT,DSINTW
      COMMON/TSLINT/TSINT,NINT,SWINT,SWHINT,NINTW      
      
C     COMMON BLOCKS
      COMMON/IONUM/IN,IPR,IPU
cc      COMMON/FSMPM1/UZTWM,UZFWM,UZK,PCTIM,ADIMP,RIVA,ZPERC,REXP,LZTWM,
cc     1              LZFSM,LZFPM,LZSK,LZPK,PFREE,SIDE,SAVED,PAREA
      COMMON/FSMCO1/UZTWC,UZFWC,LZTWC,LZFSC,LZFPC,ADIMC,FGCO(6),RSUM(7),
     1           PPE,PSC,PTA,PWE,PSH,TSOIL(8),smc(8),sh2o(8)
cv07     +               ppx,ppsc,pta,pwe,psh,tsoil(8)     
cc      COMMON/FPMFG1/FGPM(15)
      COMMON/FPMFG1/itta,FGPM(15),ivers,ifrze
      COMMON/FRDSTFG/SMAX,PSISAT,BRT,SWLT,QUARTZ,STYPE,NUPL,
     +               NSAC,RTUZ,RTLZ,DZUP,DZLOW
cc      COMMON/FRZCNST/ FRST_FACT,CKSOIL,ZBOT
      COMMON/FRZCNST/ FRST_FACT,ZBOT      
cv07
      COMMON/PRV_STATES/ UZTWC0,UZFWC0,LZTWC0,LZFSC0,LZFPC0
            
C  CALCULATE CHARACTERISTICS OF THE FIRST THIN LAYER (RESIDUE)
C  3cm THICKNESS WAS ASSIGNED FOR THIS LAYER
cv07       SMCMR = FGPM(3)
C  DEFAULT MAX POROSITY OF THIS LAYER IS 0.58
cc       IF(SMCMR .EQ. 0.) SMCMR = 0.38
cv07       IF(SMCMR .EQ. 0.) SMCMR = 0.58
cv07       SMC(1)=SMCMR*0.15
cv07       SH2O(1)=SMC(1)

      IF(ISTART .EQ. 0) THEN
cv07      IF(iopt .EQ. 1) THEN
       NLOOP=NLOOP+1
       
C  DEFINE TEMPERATURE AT THE BOTTOM BOUNDARY 
c  default temperature at ZBOT m depths is 10.0 C
cv07       IF(FGPM(2) .EQ. -999.) THEN
cv07        TBOT = 10.0+T0
cv07       ELSE 
cv07        TBOT = FGPM(2)+T0
cv07       ENDIF 
   
C  DEFINE FROZEN GROUND SIMULATION TIME STEP AS A FRACTION OF SAC DT
C  WHICH IS IN DAYS
       RDT=DT*3600*24/DTSIM
       IDT=RDT+0.5
       DTFRZ=DTSIM
       IF(RDT .LT. 1.) THEN
        DTFRZ=DT*3600
       ELSE
        IF(MOD(DT*3600*24,DTFRZ) .NE. 0.) DTFRZ=DT*3600*24/IDT
       ENDIF

C  CHECK IF NEW SOIL LAYER DEFINITIONS ARE THE SAME AS OLD ONE
CC      NSOLD=FGCO(2)
CC      NUOLD=FGCO(3)

C  NO ANY STATES TO RECALCULATE
CC      IF(NSOLD .EQ. -999) GOTO 100

C  CALL COX() TO ADJUST STATES TO NEW SOIL LAYER
CC      IF(NSOIL .NE. NSOLD .OR. NUPL .NE. NUOLD) THEN
ccc  Cox subroutine should be added
CC       STOP 10
CC      ENDIF

C  GET SOIL LAYERS DEFINITION
      NSOIL=FGPM(7)
cc      ZBOT = FGPM(7+NSOIL+1)
      DO I=1,NSOIL
       ZSOIL(I)=FGPM(I+7)
      ENDDO       
     
C  GENERATE INITIAL STATES ASSUMING UNIFORM DISTRIBUTION OF TOTAL WATER.
C  UNFROZEN WATER WILL BE DISTRIBUTED DEPENDING ON SOIL TEMPERATURE
C  UZTWH, UZFWH, LZTWH, LZFSH, LZFPH CAN BE NEGATIVE WHICH MEANS THAT
C  LIQUID WATER ARE BELOW WILTING POINT
cv07      WUZH=FGCO(2)+FGCO(3)
cv07      WLZH=FGCO(4)+FGCO(5)+FGCO(6)
cv07      DZUP=ZSOIL(1)-ZSOIL(NUPL)
cv07      DZLOW=ZSOIL(NUPL)-ZSOIL(NSAC)  
cv07      SMCUZ=0.001*RTUZ*(UZTWC+UZFWC)/DZUP+SWLT
cv07      SMCLZ=0.001*RTLZ*(LZTWC+LZFSC+LZFPC)/DZLOW+SWLT
cv07      SH2OUZ=0.001*RTUZ*WUZH/DZUP+SWLT
cv07      SH2OLZ=0.001*RTLZ*WLZH/DZLOW+SWLT
cv07      TBUP=TBND(TSOIL(1)+T0,TSOIL(2)+T0,ZSOIL,ZBOT,1,NSOIL)
cv07      SUP=0.
cv07      SUPN=0.
cv07      SLW=0.
cv07      SLWN=0.
cv07      SUPP=0.
cv07      SLWP=0.
cv07      DO I=2,NSOIL
C  CALCULATE AVERAGE SOIL TEMPERATURE OF I-TH LAYER
cv07      IF(I .NE. NSOIL) THEN
cv07       TBDN=TBND(TSOIL(I)+T0,TSOIL(I+1)+T0,ZSOIL,ZBOT,
cv07     +           I,NSOIL)
cv07      ELSE
cv07       TBDN=TBND(TSOIL(I)+T0,TBOT,ZSOIL,ZBOT,I,NSOIL)
cv07      ENDIF  
cv07      DZ=ZSOIL(I-1)-ZSOIL(I)
cv07      TS=ST_AVG1(TBUP,TSOIL(I)+T0,TBDN,DZ)
cv07      TBUP=TBDN

C  CALCULATE POTENTIAL UNFROZEN WATER CONTENT
cv07       IF(I .LE. NUPL) THEN
C  UPPER ZONE LAYERS
cv07        SMC(I)=SMCUZ
cv07        IF(TS .LE. T0) THEN
cv07         SH2O(I)=FRH2O(TS,SMC(I),SH2OUZ,SMAX,BRT,PSISAT,FGPM(4))
cv07         IDSW(I)=1
cv07        ELSE
cv07         SH2O(I)=SMC(I)
cv07         IDSW(I)=0
cv07        ENDIF
cv07        DSW(I)=1000*(SH2O(I)-SWLT)*(ZSOIL(I-1)-ZSOIL(I))/RTUZ
cv07        IF(IDSW(I) .EQ. 1) THEN
cv07         SUP=SUP+DSW(I)
cv07         SUPP=SUPP+ABS(DSW(I))
cv07        ELSE
cv07         SUPN=SUPN+DSW(I)
cv07        ENDIF 

cv07       ELSE
C  LOWER ZONE LAYERS
cv07        SMC(I)=SMCLZ
cv07        IF(TS .LE. T0) THEN
cv07         SH2O(I)=FRH2O(TS,SMC(I),SH2OLZ,SMAX,BRT,PSISAT,FGPM(4))
cv07         IDSW(I)=1
cv07        ELSE
cv07         SH2O(I)=SMC(I)
cv07         IDSW(I)=0
cv07        ENDIF
cv07        IF(I .LE. NSAC) THEN
cv07         DSW(I)=1000*(SH2O(I)-SWLT)*(ZSOIL(I-1)-ZSOIL(I))/RTLZ
cv07         IF(IDSW(I) .EQ. 1) THEN
cv07          SLW=SLW+DSW(I)
cv07          SLWP=SLWP+ABS(DSW(I))
cv07         ELSE
cv07          SLWN=SLWN+DSW(I)
cv07         ENDIF
cv07        ENDIF   
cv07       ENDIF 
cv07      ENDDO

C   ADJUST UNFROZEN WATER CONTENTS USING AVAILABLE UPPER AND
C   LOWER ZONE SAC-SMA STATES UZTWH, UZFWH, LZTWH, LZFSH, LZFPH
cv07      DO I=2,NSAC
cv07       IF(I .LE. NUPL) THEN
cv07        ALP=(1.+(WUZH-SUPN-SUP)/SUPP)*RTUZ
cv07       ELSE
cv07        ALP=(1.+(WLZH-SLWN-SLW)/SLWP)*RTLZ
cv07       ENDIF
cv07       IF(IDSW(I) .EQ. 1) THEN
cv07        DSW(I)=ALP*DSW(I)
cv07        SH2O(I)=0.001*DSW(I)/(ZSOIL(I-1)-ZSOIL(I))+SWLT
cv07       ENDIF 
cv07      ENDDO

cv07      DSL=0.
cv07      SUP=0.
cv07      SLW=0.
cv07      DO I=2,NSAC
cv07       IF(I .LE. NUPL) THEN
cv07        SH2O(I)=SH2O(I)+0.001*DSL*RTUZ/(ZSOIL(I-1)-ZSOIL(I))
cv07        SUP=SUP+1000*(SH2O(I)-SWLT)*(ZSOIL(I-1)-ZSOIL(I))/RTUZ
cv07        RTZ=RTUZ
cv07       ELSE
cv07        SH2O(I)=SH2O(I)+0.001*DSL*RTLZ/(ZSOIL(I-1)-ZSOIL(I))
cv07        SLW=SLW+1000*(SH2O(I)-SWLT)*(ZSOIL(I-1)-ZSOIL(I))/RTLZ
cv07        RTZ=RTLZ
cv07       ENDIF
cv07       DSL=0.  
cv07       IF(SH2O(I) .LT. 0.) THEN
cv07        DSL=1000.*SH2O(I)*(ZSOIL(I-1)-ZSOIL(I))/RTZ
cv07        SH2O(I)=0.
cv07       ELSE 
cv07        DS=SH2O(I)-SMC(I)
cv07        IF(DS .GT. 0.) THEN
cv07         DSL=1000.*DS*(ZSOIL(I-1)-ZSOIL(I))/RTZ
cv07         SH2O(I)=SMC(I)
cv07        ENDIF
cv07       ENDIF
cv07      ENDDO      

       IF(IPRINT .NE. 0) THEN
       WRITE(IOUT,*) '    INITIAL SOIL LAYER STATES: '
       WRITE(IOUT,'(A20,7F7.3)') ' LAYER DEPTH (M):   ',
     +      ZSOIL(1),(ZSOIL(1)-ZSOIL(I),I=2,NSOIL)
       WRITE(IOUT,'(A20,7F7.2)') ' TOTAL MOISTURE:    ',
     +                           (SMC(I),I=1,NSOIL)
       WRITE(IOUT,'(A20,7F7.2)') ' UNFROZEN MOISTURE: ',
     +                           (SH2O(I),I=1,NSOIL)
       WRITE(IOUT,'(A20,5F7.2)') ' TEMPERATURE:       ',
     +                          (TSOIL(I),I=1,NSOIL)       
       WRITE(IOUT,'(A,F7.1)') '   INITIAL FROST INDEX(MM)=',FGCO(1)
       ENDIF
       
C  REMEMBER SAC-SMA INITIAL STATES
cv07      UZTWC0=UZTWC
cv07      UZFWC0=UZFWC
cv07      LZTWC0=LZTWC
cv07      LZFSC0=LZFSC
cv07      LZFPC0=LZFPC
                  
       ISTART=-1 
      ENDIF
cc      ISTART=ISTART+1
C  end of initial loop
c test
        
C  FROST INDEX AND SOIL TEMPERATURE STATES
      FROST=FGCO(1)
      DO I=1,NSOIL
       STC(I)=TSOIL(I)+T0
      ENDDO

C  CALL SUBROUTINE TO RECALCULATE SAC-SMA STATES INTO FROZEN
C  GROUND MODEL STATES:
C  UPPER ZONE STORAGES
      DWT=RTUZ*(UZTWC-UZTWC0)
      DWF=RTUZ*(UZFWC-UZFWC0)
      NUP=2
      IEXIT=0
      CALL SAC2FRZ1(DWT,DWF,SMC,SH2O,NUP,NUPL,ZSOIL,SMAX,IOUT,IEXIT)

C  LOWER ZONE STORAGES
      DWT=RTLZ*(LZTWC-LZTWC0)
      DWF=RTLZ*(LZFSC+LZFPC-LZFSC0-LZFPC0)
      NUP=NUPL+1
      CALL SAC2FRZ1(DWT,DWF,SMC,SH2O,NUP,NSAC,ZSOIL,SMAX,IOUT,IEXIT)

C  CALCULATE SNOW DENSITY
C   SH - SNOW DEPTH IN CM
C   SR - SNOW DENSITY IN G/CM3
C   WE - SNOW WATER EQUIVALENT IN MM
      IF(WE .EQ. 0.) THEN
       SHX=0.
       SR=0.2
      ELSE
       SR=0.1*WE/SH
       SHX=0.01*SH
      ENDIF
C  CONVERT AIR TEMPERATURE INTO KALVIN UNITS
      TAIR=TA+T0    

C  FROZEN GROUND SIMULATION LOOP 
      DO IT=1,IDT
C  HRT1 ROUTINE CALCS THE RIGHT HAND SIDE OF THE SOIL TEMP DIF EQN
       CALL HRT1(RHSTS,STC,SMC,SMAX,NSOIL,ZSOIL,TAIR,FGPM(2),
     +          ZBOT, PSISAT, SH2O, DTFRZ, BRT, SHX, SR, AESC,
C
C12/02  V.K.  ADDED ONE MORE FORMAL PARAMETER - IVERS
CC     +          STYPE, QUARTZ, FGPM(3) )
     +       STYPE, QUARTZ, FGPM(3), IVERS, FGPM(4))
     

     
C     HSTEP ROUTINE CALCS/UPDATES SOIL TEMPS BASED ON RHSTS
       CALL HSTEP ( STCOUT,STC,RHSTS,DTFRZ,NSOIL )

C   DOUBLE CALLING HRT1 & HSTEP TO REDUCE NOISE. 
C   IT RUNS ONLY IF THERE IS AN ICE IN ONE SOIL LAYER AT LEAST
       IFRZ = 0
       DO I = 1,NSOIL
        xxs=SMC(I) - SH2O(I)
        IF( xxs .GT. 0.0 ) IFRZ = 1
       ENDDO
       IF ( IFRZ .EQ. 1 ) THEN     

C  SECOND CALL OF HRT1 AND HSTEP
        DO I = 1,NSOIL
         STC(I) = 0.5 * ( STCOUT(I) + STC(I) )
        ENDDO
        CALL HRT1(RHSTS,STC,SMC,SMAX,NSOIL,ZSOIL,TAIR,FGPM(2),
     +          ZBOT, PSISAT, SH2O, DTFRZ, BRT, SHX, SR, AESC,
C
C12/02  V.K.  ADDED ONE MORE FORMAL PARAMETER - IVERS
CC     +          STYPE, QUARTZ, FGPM(3) )
     +          STYPE, QUARTZ, FGPM(3), IVERS, FGPM(4))
        
C     HSTEP ROUTINE CALCS/UPDATES SOIL TEMPS BASED ON RHSTS
        CALL HSTEP ( STC,STC,RHSTS,DTFRZ,NSOIL )

       ELSE
C  SKIP SECOND CALL OF HRT1 AND HSTEP
        DO I = 1,NSOIL
          STC(I) = STCOUT(I)
        ENDDO
       ENDIF

      ENDDO

C  STORE SOIL TEMPERATURE STATES IN CELSIUS
      ITFRZ=0
      DO I=1,NSOIL
       TSOIL(I)=STC(I)-T0
       IF(TSOIL(I) .LT. 0.) ITFRZ=ITFRZ+1
      ENDDO
      TSOIL(8)=0.
      TSOIL(7)=0.
      
C  RECALCULATE UNFROZEN MOISTURE STATES INTO SAC-SMA STORAGES 
      ISFRZ=0
      IF(UZTWC .NE. FGCO(2)) ISFRZ=ISFRZ+1
      IF(UZFWC .NE. FGCO(3)) ISFRZ=ISFRZ+1
      IF(LZTWC .NE. FGCO(4)) ISFRZ=ISFRZ+1
      IF(LZFSC .NE. FGCO(5)) ISFRZ=ISFRZ+1
      IF(LZFPC .NE. FGCO(6)) ISFRZ=ISFRZ+1
      IF(ISFRZ .NE. 0 .OR. ITFRZ .NE. 0) THEN   
       IEXIT=0
       CALL FRZ2SAC1(PX,ZSOIL,NUPL,NSAC,SWLT,RTUZ,RTLZ)

       IF(NSAC .NE. NSOIL) FGCO(1)=FGCO(1)-1000.*(SMC(NSOIL)-
     +    SH2O(NSOIL))*(ZSOIL(NSOIL-1)-ZSOIL(NSOIL))/FRST_FACT
     
C  FROST DEPTH CALCULATION
       FIND=FRZIND1(SMC,SH2O,TSOIL,ZSOIL,NSOIL,NUP,NSAC,RTUZ,RTLZ,
     +             FROST,SWLT)
      ENDIF
       
C  REMEMBER SAC-SMA PREVIOUS STATES
cv07      UZTWC0=UZTWC
cv07      UZFWC0=UZFWC
cv07      LZTWC0=LZTWC
cv07      LZFSC0=LZFSC
cv07      LZFPC0=LZFPC

CVK_02  NEW OPTION TO INTERPOLATE MODEL SOIL LAYER TEMP. INTO DESIRED LAYERS
      NMOD=NSOIL+1
CCC      DSMOD(1)=0.
      DSMOD(1)=-0.5*ZSOIL(1)
      TSTMP(1)=TSOIL(1)
      SWTMP(1)=SMC(2)
      SWHTMP(1)=SH2O(2)
      DSMOD(NMOD)=-ZBOT
      TSTMP(NMOD)=FGPM(2)-T0
      SWTMP(NMOD)=SMAX
      SWHTMP(NMOD)=SMAX
      DO I=2,NMOD-1
       DSMOD(I)=-0.5*(ZSOIL(I-1)+ZSOIL(I))
       TSTMP(I)=TSOIL(I)
       SWTMP(I)=SMC(I)
       SWHTMP(I)=SH2O(I)
      ENDDO 
      CALL SOIL_INT1(TSTMP,NMOD,DSMOD,DSINT,NINT,TSINT)
      CALL SOIL_INT1(SWTMP,NMOD,DSMOD,DSINTW,NINTW,SWINT)
      CALL SOIL_INT1(SWHTMP,NMOD,DSMOD,DSINTW,NINTW,SWHINT)
      DO I=1,NINTW
       IF(I .EQ. 1) THEN
        SWINT(I)=SWINT(I)*DSINTW(I)*1000.
        SWHINT(I)=SWHINT(I)*DSINTW(I)*1000
       ELSE	
        SWINT(I)=SWINT(I)*(DSINTW(I)-DSINTW(I-1))*1000.
        SWHINT(I)=SWHINT(I)*(DSINTW(I)-DSINTW(I-1))*1000
       ENDIF
      ENDDO 	

      RETURN
      END
	  
	  
