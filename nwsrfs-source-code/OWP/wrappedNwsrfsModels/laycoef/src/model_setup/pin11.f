C MEMBER PIN11
C  (from old member FCPIN11)
C
      SUBROUTINE PIN11(P,C,FILENAME)
C
C     THIS THE INPUT SUBROUTINE FOR LAYERED COEFFICIENT ROUTING.
C     THIS SUBROUTINE INPUTS ALL CARDS FOR THE OPERATION
C     AND FILLS THE P ARRAY AND PLACES INITIAL VALUES OF THE
C     STATE VARIABLES IN THE C ARRAY.
C
C     THIS SUBROUTINE ORIGINALLY WRITTEN BY
C          DAVID REED -HRL   OCT 1979
C
C
C
      DIMENSION P(1),C(1),TITLE(5),QIN(2),QOUT(2)
C
C
C     DEFINITION OF VARIABLES
C
C     QIN         INTERNAL IDENTIFIER FOR INFLOW TIME SERIES
C     QITYPE      DATA TYPE CODE FOR INFLOW TIME SERIES
C     IDTQI       TIME INTERVAL FOR INFLOW TIME SERIES
C     QOUT        INTERNAL IDENTIFIER FOR OUTFLOW TIME SERIES
C     QOTYPE      DATA TYPE CODE FOR OUTFLOW TIME SERIES
C     IDTQO       TIME INTERVAL FOR OUTFLOW TIME SERIES
C     TITLE       GENERAL TITLE OF REACH OR PROBLEM
C     NCOEFF      NUMBER OF LAYERS FOR ROUTING
C     ICVAL       CARRYOVER DECISION PARAMETER
C                 IF ICVAL=0,ALL RESIDUAL CARRYOVER SET TO 0 BY DEFAULT
C                 IF ICVAL=1,ALL RESIDUAL CARRYOVER IS READ FROM
C                      NEXT DATA CARD
C     COEFF       COEFFICIENTS FOR LAYERED COEFFICIENT ROUTING
C     QRANGE      MAXIMUM VALUE OF FLOW FOR A GIVEN LAYER
C     RES         RESIDUAL LAYER CARRYOVER
C
C
C     COMMON BLOCKS
C
C     COMMON/FDBUG/IODBUG,ITRACE,IDBALL,NDEBUG,IDEBUG(20)
C     COMMON/IONUM/IN,IPR,IPU

      INCLUDE 'flogm'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcinit_pntb/RCS/pin11.f,v $
     . $',                                                             '
     .$Id: pin11.f,v 1.1 1995/09/17 18:48:03 dws Exp $
     . $' /
C    ===================================================================
C
      DATA DIMQI/4HL3/T/,DIMQO/4HL3/T/

      CHARACTER *5 IDIM1         
      CHARACTER *5 IUNIT
      CHARACTER * 512 FILENAME

C
C     CHECK TRACE LEVEL-- FOR THIS SUBROUTNE =1
C
      IF(FEWSDEBUG.GE.1) THEN
      WRITE(MESSAGESTRING,900)
  900 FORMAT(1H0,16H** PIN11 ENTERED)
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      ENDIF

      IN = 1 
      OPEN(IN, FILE=FILENAME, STATUS='OLD')

C
C     CHECK TO SEE IF DEBUG OUTPUT IS NEEDED
C
CVR   IBUG=0
CVR   IF(IDBALL.GT.0)IBUG=1
      IF(FEWSDEBUG.EQ.0)GO TO 12
CVR   DO 10 I=1,NDEBUG
CVR   IF(IDEBUG(I).EQ.11) GO TO 11
CVR10 CONTINUE
      GO TO 12
CVR11 IBUG=1
C
C     READ IN CARD #1-TITLE,INFLOW AND OUTFLOW TIME SERIES IDENTIFIER,
C                    NUMBER OF LAYERS, AND CARRYOVER DECISION PARAMETERS
C
   12 READ(IN,901)TITLE,QIN,QITYPE,IDTQI,QOUT,QOTYPE,IDTQO,NCOEFF,ICVAL
  901 FORMAT(5A4,2X,2A4,1X,A4,3X,I2,2X,2A4,1X,A4,3X,I2,2X,I3,4X,I1)
      NM=NCOEFF-1
      IVER=1
CVR   NOFILL=0
      NQST=17+NCOEFF
      NQSTM1=NQST-1
      NQLST=NQST+NM-1
      NM2=NM-1
      IF(NCOEFF.GT.0) GO TO 209
      WRITE(MESSAGESTRING,927)
  927 FORMAT(1H0,10X,44H**ERROR**THE NUMBER OF COEFFICIENTS IS ZERO.)
      call logfromfortran(FATAL_LEVEL, MESSAGESTRING)
      IUSEP=0
      IUSEC=0
CVR   NOFILL=1
C
C     CHECK INFLOW TIME SERIES USING SUBROUTINE CHEKTS
C
C 209 CALL CHEKTS(QIN,QITYPE,IDTQI,1,DIMQI,0,1,IERFLG)

  209 CALL getDimensionAndUnitInFortran(QITYPE, IDIM1, IUNIT)
      IF ((IDIM1.NE.'L3/T') .OR. (IUNIT.NE.'CMS')) THEN
      WRITE(MESSAGESTRING, *)
     + 'FOR CHANNEL INFLOW TS', QITYPE,
     + 'L3/T IS EXPECTED INSTEAD OF ', IDIM1,
     +      ' CMS IS EXPECTED INSTEAD OF ', IUNIT
            call logfromfortran(FATAL_LEVEL,MESSAGESTRING)
      ENDIF

C
C     CHECK OUTFLOW TIME SERIES
C
CVR   IF(IDTQO.EQ.0) GO TO 103
      IF(IDTQO.EQ.0) GO TO 113
      IF(IDTQO.GE.IDTQI) GO TO 102
      WRITE(MESSAGESTRING,905)IDTQO,IDTQI
  905 FORMAT(1H0,10X,33H**ERROR** OUTFLOW TIME INTERVAL =,I3,6H HOURS,
     136H IS LESS THAN INFLOW TIME INTERVAL =,I3,6H HOURS,
     239H THIS IS NOT ALLOWED FOR THIS OPERATION)
C
      call logfromfortran(FATAL_LEVEL, MESSAGESTRING)
C
C     CHECK OUTFLOW TIME SERIES BY USING SUBROUTINE CHEKTS
C
C 102 CALL CHEKTS(QOUT,QOTYPE,IDTQO,1,DIMQO,0,1,IERFLG)

  102 CALL getDimensionAndUnitInFortran(QOTYPE, IDIM1, IUNIT)
      IF ((IDIM1.NE.'L3/T') .OR. (IUNIT.NE.'CMS')) THEN
      WRITE(MESSAGESTRING, *)
     + 'FOR CHANNEL INFLOW TS', QOTYPE,
     + 'L3/T IS EXPECTED INSTEAD OF ', IDIM1,
     +      ' CMS IS EXPECTED INSTEAD OF ', IUNIT
            call logfromfortran(FATAL_LEVEL,MESSAGESTRING)
      ENDIF
C
C
C     CALCULATE THE SPACES NEEDED IN THE P AND C ARRAYS
CV103 IF(NOFILL.EQ.1) GO TO 114
CVR   IUSEC=NCOEFF
CVR   IUSEP=16+NCOEFF+NM
C
C     CHECK TO SEE IF THERE IS ENOUGH ROOM IN THE P AND C ARRAYS
C
CVR   IF(IUSEP.LE.LEFTP) GO TO 111
CVR   WRITE(IODBUG,908)
CV908 FORMAT(1H0,10X,74H**ERROR** THIS OPERATION NEEDS MORE SPACE THAN I
CVR  1S AVAILABLE IN THE P ARRAY)
CVR   CALL ERROR

CVR   NOFILL=1
CV111 IF(IUSEC.LE.LEFTC) GO TO 112
CVR   WRITE(IODBUG,909)
CV909 FORMAT(1H0,10X,74H**ERROR** THIS OPERATION NEEDS MORE SPACE THAN I
CVR  1S AVAILABLE IN THE C ARRAY)
CVR   CALL ERROR
CVR   NOFILL=1
C
C
CV112 IF(NOFILL.EQ.0) GO TO 113
CVR   IUSEC=0
CVR   IUSEP=0
CVR   GO TO 114
  113 CONTINUE
      READ(IN,917)(P(I),I=17,NQSTM1)
  917 FORMAT(7F10.0)
      IERFLG=0
      DO 104 I=1,NCOEFF
      IF(P(I+16).LE.1.) GO TO 104
      IERFLG=IERFLG+1
      P(I+16)=1.
  104 CONTINUE
      IF(IERFLG.EQ.0) GO TO 105
      WRITE(MESSAGESTRING,906)IERFLG
  906 FORMAT(1H0,10X,11H**WARNING**,I2,63H COEFFICIENTS HAD VALUES GREAT
     1ER THAN 1. VALUES SET EQUAL TO 1.)
      call logfromfortran(WARNING_LEVEL, MESSAGESTRING)
C
C     CHECK QRANGE DATA FOR ERRORS
C        THESE VALUES MUST BE IN INCREASING ORDER
  105 IF(NCOEFF.LE.1) GO TO 107
      READ(IN,917)(P(I),I=NQST,NQLST)
      IERFLG=0
      IF(NCOEFF.LE.2) GO TO 107
      NM2=NM-1
      DO 106 I=1,NM2
  106 IF(P(NQST+I-1).GE.P(NQST+I))IERFLG=1
      IF(IERFLG.EQ.0)GO TO 107
      WRITE(MESSAGESTRING,907)
  907 FORMAT(1H0,10X,56H**ERROR** FLOW RANGES FOR LAYERS NOT IN INCREASI
     1NG ORDER)
      call logfromfortran(FATAL_LEVEL, MESSAGESTRING)
C
C     CHECK TO SEE IF CARRYOVER SHOULD BE READ IN INITIALLY OR
C           SET EQUAL TO ZERO BY DEFAULT
C
  107 IF(ICVAL.EQ.0) GO TO 108
      READ(IN,917)(C(I),I=1,NCOEFF)
      GO TO 109
  108 DO 110 I=1,NCOEFF
  110 C(I)=0.
C
C     PUT VALUES IN P AND C ARRAYS
C
  109 P(1)=IVER+0.01
      DO 116 I=2,6
  116 P(I)=TITLE(I-1)
      P(7)=QIN(1)
      P(8)=QIN(2)
      P(9)=QITYPE
      P(10)=IDTQI+0.01
      P(11)=QOUT(1)
      P(12)=QOUT(2)
      P(13)=QOTYPE
      P(14)=IDTQO+0.01
      P(15)=ICVAL+0.01
      P(16)=NCOEFF+0.01
C     IF(FEWSDEBUG.EQ.0) GO TO 114
C
C     PRINT DEBUG OUTPUT  P AND C ARRAYS
C
      IF(FEWSDEBUG.GE.1) THEN
      WRITE(MESSAGESTRING,910)IUSEP,IUSEC
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  910 FORMAT(1H0,10X,26HCONTENTS OF P AND C ARRAYS,5X,
     124HNUMBER OF VARIABLES---P=,I3,5H  C =,I3)
      WRITE(MESSAGESTRING,911)(P(I),I=1,IUSEP)
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  911 FORMAT(1H0,14(F8.3,1X))
      WRITE(MESSAGESTRING,911)(C(I),I=1,IUSEC)
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      ENDIF

C
C     POSITION         CONTENTS OF P ARRAY
C     1                VERSION NUMBER OF OPERATION
C     2-6              GENERAL NAME OR TITLE
C     7-8              INFLOW TIME SERIES I.D.
C     9                INFLOW TIME SERIES DATA TYPE
C     10               INFLOW TIME SERIES TIME INTERVAL
C     11-12            OUTFLOW TIME SERIES I.D.
C     13               OUTFLOW TIME SERIES DATA TYPE
C     14               OUTFLOW TIME SERIES TIME INTERVAL
C     15               CARRYOVER DECISION PARAMETER
C                        =0--RESIDUALS =0 BY DEFAULT
C                        =1--RESIDUALS ARE READ IN FROM NEXT DATA CARD
C     16               NUMBER OF LAYERS
C
C
C                STARTING LOCATION OF COEFFICIENTS IS POSITION 17
C
C                STARTING LOCATION OF FLOW RANGES IS POSITION (17+NCOEFF
C

  114 CONTINUE

      CLOSE(IN)
      RETURN
      END
