C MEMBER SUMN26
C  (from old member FCSUMN26)
C **********************************************************************
      SUBROUTINE SUMN26(QIMHYD,SQIM,STOR,ELEV)
C **********************************************************************
C THIS IS A UTILITY SUBROUTINE FOR COMPUTING AN INTERNAL TIME SERIES OF
C CUMULATIVE MEAN INFLOWS    FROM A TIME SERIES OF MEAN INFLOWS.
C             THE SUBROUTINE WILL ALSO COMPUTE AN APPROXIMATE MAXIMUM
C STORAGE AND ELEVATION USING A SPECIFIED CONSTANT OUTFLOW.  THIS COULD
C BE MAXIMUM TURBINE FLOW FOR A POWER DAM BUT WOULD BE LIMITED TO OUT-
C FLOW THAT WOULD NOT EXCEED FLOOD FLOW FOR EITHER POWER OR NON- POWER
C DAMS.
C **********************************************************************
C THIS UTILITY SUBROUTINE WAS ORIGINALLY PROGRAMMED BY
C     WILLIAM E. FOX -- CONSULTING HYDROLOGIST
C     OCTOBER, 1981
C **********************************************************************
C SUBROUTINE SUMN26 IS IN
C **********************************************************************
C VARIABLES PASSED TO OR FROM THIS SUBROUTINE ARE DEFINED AS FOLLOWS:
C     BGNSTL -- STORAGE AT BEGINNING OF FIRST TIME PERIOD FOR SIMULATED
C       RUN AND END OF TIME PERIOD REPRESENTED BY LOBST FOR ADJUSTED
C       RUN.
C     ELEV -- ELEVATION VALUES FOR STOR VS ELEV RELATION.
C     EMXELV -- COMPUTED MAXIMUM ELEVATION.
C     EMXSTO -- COMPUTED MAXIMUM STORAGE IN UNITS OF MEAN DISCHARGE FOR
C       THE TIME PERIOD.
C     FCST -- LOGICAL VARIABLE.  IF TRUE, TIME PERIOD IS IN FORECAST
C       PERIOD.
C     FLOOD -- LOGICAL VARIABLE, TRUE IF STORAGE GETS ABOVE A CRITERIA
C        LEVEL, FALSE IF THE STORAGE STAYS BELOW THAT LEVEL.
C     IBUG -- NO TRACE OR DEBUG (IBUG=0), TRACE ONLY (IBUG=1),TRACE AND
C       DEBUG (IBUG=2).
C     IFCST -- SIMULATED RUN (IFCST=0) OR ADJUSTED RUN (IFCST=1).
C     LOBST -- ARRAY POSITION OF LAST OBSERVED STORAGE VALUE OR LAST
C       STORAGE COMPUTED FROM OBSERVED MEAN OUTFLOW AND ADJUSTED MEAN
C      INFLOW.  WILL BE 0 IF NO OBSERVED OR COMPUTED STORAGES.
C     NEMXST -- ARRAY POSITION OF ESTIMATED MAXIMUM STORAGE.
C       WILL BE 0 IF DISCHARGE AT BEGINNING OF FIRST TIME PERIOD IS THE
C       MAXIMUM DISCHARGE.
C     NRUN -- ARRAY POSITION AT RUN TIME.
C     NSE -- NO. OF PAIRS OF STOR AND ELEV VALUES.
C     NTERP -- ARITHMETIC INTERPOLATION (NTERP=0) OR LOGARITHMIC (NTERP
C       =1).
C     NUM -- NO. OF VALUES IN MEAN INFLOW ARRAY.
C     QIMHYD -- ARRAY OF MEAN INFLOWS.
C     SPCQOM -- SPECIFIED CONSTANT OUTFLOW.  COULD BE MAXIMUM GENERATION
C       FLOOD DISCHARGE.
C     SQIM -- ARRAY OF CUMULATIVE MEAN INFLOWS.
C     STOR -- STORAGE VALUES FOR STORAGE VS ELEVATION RELATION.
C     STORMX -- STORAGE LEVEL TO BE CHECKED AGAINST IN SETTING WHETHER
C        WE HAVE A "FLOOD" SITUATION OR NOT.
C **********************************************************************
      DIMENSION QIMHYD(1),SQIM(1),STOR(1),ELEV(1)
!CP   INCLUDE 'common/fdbug'
      INCLUDE 'flogm'
      INCLUDE 'common/resv26'
      INCLUDE 'common/sumi26'
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/sumn26.f,v $
     . $',                                                             '
     .$Id: sumn26.f,v 1.3 1998/04/07 12:02:23 page Exp $
     . $' /
C    ===================================================================
C
C **********************************************************************
C WRITE TRACE  IF REQUIRED.
C **********************************************************************
!CP   IF(IBUG-1)30,10,10
!CP   10 WRITE(IODBUG,20)

      IF ( FEWSDEBUG.LT.4 ) GO TO 30
      WRITE(MESSAGESTRING, 20)
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
   20 FORMAT(1H0,10X,17H** SUMN26 ENTERED)
   30 CONTINUE
      LOBST=LOBSTO
      IF(IFCST.EQ.0) LOBST=0
      SUM=0.
      DO 40 I=1,NUM
      SUM=SUM+QIMHYD(I)
   40 SQIM(I)=SUM
C **********************************************************************
C COMPUTE AN ESTIMATED MAXIMUM STORAGE (EMXSTO) USING A SPECIFIED CON-
C STANT OUTFLOW (SPCQOM).  COMPUTATIONS WILL START AFTER THE LAST
C OBSERVED STORAGE OR IN THE FIRST TIME PERIOD IF NO OBSERVED STORAGES.
C **********************************************************************
      SBGN=BGNSTL
      EMXSTO=BGNSTL
      NEMXST=LOBST
      JBGN=LOBST+1
      IF(LOBST.EQ.0) GO TO 70
      SQIMBG=SQIM(LOBST)
      GO TO 80
   70 SQIMBG=0.
   80 DO 90 I=JBGN,NUM
      AI=I-JBGN+1
      STO=SBGN+SQIM(I)-SQIMBG-AI*SPCQOM
      IF(STO.LE.EMXSTO) GO TO 90
      EMXSTO=STO
      NEMXST=I
   90 CONTINUE
      CALL NTER26(EMXSTO,EMXELV,STOR,ELEV,NSE,IFLAG,NTERP,IBUG)
      FLOOD = .FALSE.
      IF (EMXSTO.GT.STORMX) FLOOD = .TRUE.
C **********************************************************************
C WRITE TRACE AND DEBUG IF REQUIRED.
C **********************************************************************
!CP   IF(IBUG-1)190,170,110
!CP   110 WRITE(IODBUG,120)(QIMHYD(I),I=1,NUM)
      IF ( FEWSDEBUG.LT.4 ) GO TO 190
      NPRINT=NUM
      IF ( NPRINT.GT.100 ) NPRINT=100
      
      WRITE(MESSAGESTRING, 120) 
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  120 FORMAT(1H0,10X,16H MEAN DISCHARGES) 
      WRITE(FORMATSTR, *) '%10.0f'
      call logonedimensionarrayfromfortran(DEBUG_LEVEL,NULLINE,1,8,
     >     FORMATSTR,1,NPRINT,1,QIMHYD)
   
!CP   WRITE(IODBUG,130)(SQIM(I),I=1,NUM)
      WRITE(MESSAGESTRING, 130) 
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  130 FORMAT(1H0,10X,27H CUMULATIVE MEAN DISCHARGES) 
      WRITE(FORMATSTR, *) '%10.0f'
      call logonedimensionarrayfromfortran(DEBUG_LEVEL,NULLINE,1,8,
     >     FORMATSTR,1,NPRINT,1,SQIM)

!CP   WRITE(IODBUG,140)FLOOD,NRUN,NUM,IFCST,SPCQOM,EMXSTO,EMXELV,NEMXST,
      WRITE(MESSAGESTRING, 140)FLOOD,NRUN,NUM,IFCST,SPCQOM,EMXSTO,EMXELV
     $,NEMXST,STORMX,BGNSTL,LOBST,NTERP,IBUG
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  140 FORMAT(1H0,' FLOOD,NRUN,NUM,IFCST,SPCQOM,EMXSTO,EMXELV,NEMXST,',
     $'STORMX,BGNSTL,LOBST,NTERP,IBUG'/1X,L5,3I6,3F12.3,I6,2F12.3,3I6)

!CP   WRITE(IODBUG,160)IFLAG,NSE,(STOR(I),ELEV(I),I=1,NSE)
      WRITE(MESSAGESTRING, 160)IFLAG,NSE !,(STOR(I),ELEV(I),I=1,NSE)
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  160 FORMAT(1H0,10H IFLAG IS ,I6,41H.  NO OF POINTS ON ELEV.-STORAGE CU
     $RVE IS,I4,1H./1H0,48H ALTERNATING VALUES OF STORAGE AND ELEVATION
     $ARE) !/(1X,4(F10.0,F7.2,3X)))
      NPRINT=NSE
      IF ( NPRINT.GT.100 ) NPRINT=100
      
      WRITE(FORMATSTR, *) '%10.0f'
      call logonedimensionarrayfromfortran(DEBUG_LEVEL,NULLLINE,2,4,
     >     FORMATSTR,1,NPRINT,1,STOR,ELEV)
   
!CP   170 WRITE(IODBUG,180)
      WRITE(MESSAGESTRING, 180)
      call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
  180 FORMAT(1H0,10X,17H** LEAVING SUMN26)
  190 RETURN
      END
