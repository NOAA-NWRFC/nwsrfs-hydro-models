C MEMBER XS0926
C  (from old member FCXS0926)
C
      SUBROUTINE XS0926(SUNUM,PO,W,LOCWS,LOCOWS,IDPT,NHRYR)
C---------------------------------------------------------------------
C  SUBROUTINE TO GATHER ALL THE PARM, TS, AND CO INFO FOR THE 'MINIMIZE
C  DISCHARGE' SCHEME (SU#9) AND TO CALL THE ROUTINE TO COMPUTE THE
C  MODEL OUTPUTS FOR THE ENTIRE RUN PERIOD.
C-----------------------------------------------------------------------
C  WRITTEN BY - JOE OSTROWSKI - HRL - SEPT 1983
C-----------------------------------------------------------------------
C
      INCLUDE 'common/resv26'
      INCLUDE 'common/exg26'
!CP   INCLUDE 'common/fdbug'
      INCLUDE 'flogm'
      INCLUDE 'common/omin26'
      INCLUDE 'common/xqin26'
C LC add FTIME common block to replace references to NDD*NTIM24
C with NTIMESTEPS
      COMMON/FTIME/NTIMESTEPS,NOBSTIMESTEPS
C
      DIMENSION PO(1),W(1),LOCWS(1),LOCOWS(1),IDPT(1),NHRYR(1)
C
C    ================================= RCS keyword statements ==========
      CHARACTER*68     RCSKW1,RCSKW2
      DATA             RCSKW1,RCSKW2 /                                 '
     .$Source: /fs/hseb/ob72/rfc/ofs/src/fcst_res/RCS/xs0926.f,v $
     . $',                                                             '
     .$Id: xs0926.f,v 1.2 1998/04/07 12:02:43 page Exp $
     . $' /
C    ===================================================================
C
C
C------------------------------------------------------------------
C
!CP   IF (IBUG.GE.1) WRITE(IODBUG,1600)
!CP   1600 FORMAT('   *** ENTER XS0926 ***')
      IF ( FEWSDEBUG.GE.4 ) THEN
         WRITE(MESSAGESTRING, '(A23)') '   *** ENTER XS0926 ***'
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
C----------------------------------------------------------------------
C  GET LOCATIONS OF PARMS, TS, AND CO INFO IN THE PO ARRAY
C
      CALL XPTR26(SUNUM,PO,IORD,IBASE,LEVEL,LOCPM,LOCTS,LOCCO)
C
C  SET EXECUTION POINTER AND FLAG
C
      LOCEX = IORD*3
      W(LOCEX) = 1.01
C
C  SET LOCATION OF CO OFFSET .
C
      IOFFCO = LOCWS(4) + LOCCO - 1
C
C  SET LOCATIONS OF TRACES OF INST. AND MEAN DISCHARGES, POOL ELEVATIONS
C  AND STORAGES IN WORK ARRAY.
C
      LOCITR = LOCWS(2)
C      LOCMTR = LOCITR + NDD*NTIM24
      LOCMTR = LOCITR + NTIMESTEPS
C      LOCETR = LOCMTR + NDD*NTIM24
      LOCETR = LOCMTR + NTIMESTEPS
C      LOCSTR = LOCETR + NDD*NTIM24
      LOCSTR = LOCETR + NTIMESTEPS
C
C  SET LOCATION OF SUMMED INFLOWS CREATED IN 'SUMINF'.
C
      LOCSUM = LOCOWS(3)
C
C----------------------------------------------------------------------
C  NOW GET THE PARAMETER VALUES FOR THIS SCHEME.
C
C
C  GET THE INCREASING FLOW OPTION FIRST
C
      IOPTR = PO(LOCPM)
C
C  NEXT ARE THE UPPER AND LOWER LIMITING ELEVATIONS
C
      EUPRMN = PO(LOCPM+1)
      ELWRMN = PO(LOCPM+2)
C
C  GET CONVERGENCE CRITERION FOR DETERMINING THE MINIMIZED DISCHARGE
C
      PCTERM = PO(LOCPM+3)
C
C  GET THE ELEVATION VS. MAXQ CURVE
C
      LOCNXT = LOCPM + 4
      LOCFMQ = LOCNXT
      CALL XFMQ26(SUNUM,PO,LOCFMQ,W,LOCOWS,IMQTYP,LOCMQ,LOKELV,NDAMQ)
C
C  COMPUTE NEXT LOCATION AND GET REMAINING PARMS.
C
      ITYPE = PO(LOCNXT)
      IF (ITYPE) 40,50,60
C
C  CURVE ENTERED DIRECTLY
C
   40 CONTINUE
      IADD = 2
      IF (PO(LOCNXT+1) .GT. 0.00) IADD = 2*PO(LOCNXT+1) + 2
      GO TO 100
C
C  NO TAILWATER EFFECTS
C
   50 CONTINUE
      IADD = 3
      IF (PO(LOCNXT+2) .GT. 0.00) IADD = 2*PO(LOCNXT+2) + 3
      GO TO 100
C
C  ADD UP SPACES FOR ALL COMPONENTS
C
   60 CONTINUE
      NSPQ = PO(LOCNXT+1)
      IADD = 2
      IF (NSPQ.GT.0) IADD = 2*NSPQ + 2
      LOCNEW = LOCNXT + IADD
      NHQ = PO(LOCNEW)
      IADD2 = 1
      IF (NHQ.GT.0) IADD2 = 2*NHQ + 1
      IADD = IADD + IADD2 + 3
C
  100 CONTINUE
      LOCNXT = LOCNXT + IADD
C
C  GET SPILLWAY CURVE INTERP TYPE
C
      NTERPQ = PO(LOCNXT)
C
C  PEAK REPLACING DISCHARGE IS NEXT
C
      TESTPK = PO(LOCNXT+1)
C
C  SET THE NO. OF PERIODS TO MAX Q ON RISING LIMB.
C
      NPERDR = PO(LOCNXT+2)
C
C  SET OPTION FOR INCREASING Q
C
Chsu FB1354 10/14  IOPTM = PO(LOCNXT+3)
      INCQQ = PO(LOCNXT+3)
      IOPTM=1
      IF (INCQQ.EQ.1) IOPTM=2
      LOCNXT = LOCNXT + 4
C
C  GET FLOOD DISCHARGE IF IOPTM = 2.
C
      IF (IOPTM.NE.2) GO TO 150
      QFLOOD = PO(LOCNXT)
      LOCNXT = LOCNXT + 1
C
C  GET THE EVACUATION OPTION
C
  150 CONTINUE
      IOPTF = PO(LOCNXT)
C
C  GET NO. OF PERIODS FOR BLENDING MAX INTO INFLOW HYDROGRAPH
C
      NPERDF = PO(LOCNXT+1)
C
C  GET TARGET (OR NORMAL) ELEVATION.
C
      ELVNRM = PO(LOCNXT+2)
      LOCNXT = LOCNXT + 3
C
C  GET RULE CURVE IF USED.
C
      NR = PO(LOCNXT)
chsu      IADD = 2
      IADD = 1
      IF (NR.EQ.0) GO TO 200
C
C  FILL RULE CURVE TIME SERIES.
C
      CALL XFRU26(PO,LOCNXT,W,LOCOWS,NHRYR)
      IF (NR.GT.0) IADD = 2*NR + 2
C
C  GET LOWER LIMITING DISCHARGE IF NEEDED
C
  200 CONTINUE
      LOCNXT = LOCNXT + IADD
      IUSE = 0
C
      IF (IOPTM.NE.2 .AND. IOPTF.NE.2) GO TO 250
      QLIMNF = PO(LOCNXT)
C
C  COMPUTE O VS. S+0/2 FOR THE TOTAL DISCHARGE
C
  250 CONTINUE
C
C  IMQTYP=1, ELEV. VS MAX. DISCHARGE CURVE ENTERED DIRECTLY
C  IMQTYP=1, ELEV. VS MAX. DISCHARGE CURVE COMPUTED
C
      IF (IMQTYP.EQ.1) CALL XSOH26(SUNUM,PO,W,LOCOWS,PO(LOCMQ),
     .                 PO(LOCMQ+NDAMQ),NDAMQ,X,IUSE)
      IF (IMQTYP.EQ.2) CALL XSOH26(SUNUM,PO,W,LOCOWS,PO(LOKELV),
     .                 W(LOCMQ),NDAMQ,X,IUSE)
C
C  SET LOCATION OF MOD. PULS CURVE IN WORK ARRAY
C
      LOCO = LOCOWS(10)
      LOCSOH = LOCO + NOSOH
      NTOTLQ = NDAMQ
C
C  NOW CALL THE COMPUTATIONAL ROUTINE FOR MINIMIZING DISCHARGE.
C
      MRLOC(3) = IBASE*10 + LEVEL
      IF (IMQTYP.EQ.1) CALL QMIN26(W(LPTQI),
     .            W(LPTQIM),W(LOCSUM),W(LOCITR),W(LOCITR),W(LOCMTR),
     .            W(LOCMTR),W(LOCSTR),W(LOCETR),W(LOCOWS(2)),PO(LOCMQ),
     .            PO(LOCMQ+NDAMQ),W(LOCO),W(LOCSOH),W(LOCOWS(4)),
     .            W(LOCOWS(4)+NTOTPK),PO(LESSTO),PO(LESELV),W(LOCOWS(8))
     .            )
C
      IF (IMQTYP.EQ.2) CALL QMIN26(W(LPTQI),
     .            W(LPTQIM),W(LOCSUM),W(LOCITR),W(LOCITR),W(LOCMTR),
     .            W(LOCMTR),W(LOCSTR),W(LOCETR),W(LOCOWS(2)),PO(LOKELV),
     .            W(LOCMQ),W(LOCO),W(LOCSOH),W(LOCOWS(4)),
     .            W(LOCOWS(4)+NTOTPK),PO(LESSTO),PO(LESELV),W(LOCOWS(8))
     .            )
C
C  NO NEED TO SAVE CARRYOVER, SO THAT'S IT!
C
!CP   IF (IBUG.GE.1) WRITE(IODBUG,1699)
!CP   1699 FORMAT('    *** EXIT XS0926 ***')
      IF ( FEWSDEBUG.GE.4 ) THEN
         WRITE(MESSAGESTRING, '(A23)') '    *** EXIT XS0926 ***'
	 call logfromfortran(DEBUG_LEVEL, MESSAGESTRING)
      END IF
      RETURN
      END
